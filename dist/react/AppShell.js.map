{"version":3,"file":"AppShell.js","sources":["../../src/react/AppShell.js"],"sourcesContent":["import React, { isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { spacingMap } from './helpers.js';\n\nexport default function AppShell(props) {\n    const { \n        pageBackground='base-0', \n        maxWidth='stretch',\n        justifyContent='center',\n        paddingX=null,\n        paddingY=null,\n        children, attributes, listeners } = props\n    \n\n    const paddingStyles = `${paddingX ? ` px-${spacingMap[paddingX]}` : ''}${paddingY ? ` py-${spacingMap[paddingY]}` : ''}`;\n    const fontColor = pageBackground?.startsWith('base') ? 'base-content' : `${pageBackground}-content`;\n    const pageBgColor = `bg-${pageBackground}`;\n    const fontColorValue = `text-${fontColor}`;\n    \n\n    // Ensure that parent has h-screen or replace h-full to h-screen in the classes below\n    let outerClasses = `relative flex flex-col w-full h-full flex-grow ${pageBgColor} ${fontColorValue}`;\n\n    let innerClasses = `relative flex flex-row w-full items-stretch flex-grow min-h-full self-${justifyContent} ${paddingStyles}`\n\n    let mainClasses = `relative flex flex-col w-full items-stretch flex-grow min-h-full`\n\n    const groupedChildren = {\n        Header: [],\n        Hero: [],\n        IconBar: [],\n        Sidebar: [],\n        FeaturePanel: [],\n        MainArea: [], // sidepanel + main\n        Footer: []\n    };\n\n    React.Children.forEach(children, child => {\n        if (isValidElement(child)) {\n            const { type } = child;\n            let typeName = type?.displayName || type?.name;\n            typeName = child?.props?.self?.componentAPIName; // comment out\n            if (groupedChildren[typeName]) {\n                groupedChildren[typeName].push(child);\n            } else {\n                groupedChildren.MainArea.push(child);\n            }\n        }\n    });\n\n    const { Header, Hero, Footer, MainArea, IconBar, Sidebar, FeaturePanel } = groupedChildren;\n    \n    return (\n        <div\n        {...attributes} {...listeners}\n        className={outerClasses} \n        >\n        <div \n        className={innerClasses} \n        style={{ width: '100%', maxWidth: maxWidth != 'stretch' ? `${maxWidth}px` : '100%'}}\n        >\n            {IconBar}\n            {Sidebar}\n            {FeaturePanel}\n            \n            {/* Main Block */}\n            <div className={mainClasses} \n            style={{minHeight: '100%'}}\n                >\n                {Header}\n                {Hero}\n                <div className={`flex flex-row flex-grow w-full h-full  justify-${justifyContent}`}>\n                    {MainArea}\n                </div>\n                {Footer}\n            </div>\n        </div>\n        </div>\n    );\n}\n\nAppShell.propTypes = {\n    pageBackground: PropTypes.oneOfType([\n        PropTypes.oneOf(['base-0',  'base-50', 'base-100', 'base-200', 'base-300', 'primary', 'secondary', 'accent']),\n        PropTypes.string]),\n    maxWidth: PropTypes.oneOf(['stretch', '960', '1200', '1440', '1920']),\n    justifyContent: PropTypes.oneOf(['center', 'start', 'end']), \n    paddingX: PropTypes.oneOf([\"2px\", \"4px\", \"6px\", \"8px\", \"10px\", \"12px\", \"16px\", \"24px\", \"32px\", \"48px\"]),\n    paddingY: PropTypes.oneOf([\"2px\", \"4px\", \"6px\", \"8px\", \"10px\", \"12px\", \"16px\", \"24px\", \"32px\", \"48px\"]),\n    children: PropTypes.node\n};\n\n"],"names":[],"mappings":"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"}