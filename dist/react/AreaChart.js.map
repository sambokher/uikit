{"version":3,"file":"AreaChart.js","sources":["../../src/react/AreaChart.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, LabelList, AreaChart, Area } from 'recharts';\nimport { Icon } from './index'\n// Run 'npm install recharts' to install the recharts library\n\n\nconst dummyDataData = {\n    keyPairs: ['week', 'sales'],\n    valuePairs: [\n        ['Aug 12', 150],\n        ['Aug 19', 190],\n        ['Aug 26', 180],\n        ['Sep 2', 210],\n        ['Sep 9', 205],\n        ['Sep 16', 220],\n        ['Sep 23', 240]\n    ]\n};\n\nexport default function AreaChartComponent(props) {\n    \n    const {\n        backgroundColor = null, \n        width = 'full',\n        height = '120px',\n        lineColor = 'primary',\n        lineWidth = '2',\n        lineType = 'wavy',\n        showDots = true,\n        showLabels = true,\n        showYAxis = true,\n        showXAxis = true,\n        showGrid = true,\n        data = dummyDataData,\n        title = 'Sales',\n        emptyState = false,\n        emptyMessage = 'Data may take up to 24 hrs to show',\n        attributes,\n        listeners\n      } = props;\n\n    const widthStyles = `w-${width}`;\n    // const paddingStyles = padding === 'none' ? 'p-0' : `p-${padding}`;\n    // const cornerStyles = corners === 'none' ? '' : `rounded-${corners}`;\n\n    const bgStyles = backgroundColor && backgroundColor != 'none' ? `bg-${backgroundColor}` : ''\n    const fontColorStyles = backgroundColor && backgroundColor != 'none' ? `text-base-content` : 'text-inherit'\n\n    let wrapperClasses = `flex flex-col items-stretch relative ${widthStyles} ${bgStyles} ${fontColorStyles}`\n\n    // ${paddingStyles} ${cornerStyles}\n    \n    const emptyStyles = `flex flex-col justify-center items-center px-sm text-sm font-medium gap-2 rounded-md`\n    \n    function transformData(keyPairs, valuePairs) {\n        return valuePairs.map(values => {\n            return values.reduce((obj, val, index) => {\n                obj[keyPairs[index]] = val;\n                return obj;\n            }, {});\n        });\n    }\n    \n    const sampleData = data ? transformData(data?.keyPairs, data?.valuePairs) : []\n    const totalValue = sampleData.reduce((acc, curr) => acc + curr[data?.keyPairs[1]], 0)\n    \n    const sideMargins = (!showYAxis && !showLabels && !showDots && !showXAxis) ? 0 : 20\n\n    return (\n        <div\n            {...attributes} {...listeners} \n            className={wrapperClasses}\n        >\n            \n            {/* Title Block & Menu */}\n            <div className=\"flex flex-row items-start justify-between mb-md\">\n                <div className=\"flex flex-col text-sm font-medium gap-2 items-start relative justify-between\">\n{title}\n                    <span className='text-xl font-semibold'>{totalValue}</span>\n                </div>\n                {/* implement Kebab here\n                <KebabMenu>\n                     \n                </KebabMenu> \n                */}\n            </div>\n            \n            {/* CHART */}\n            {!emptyState ?\n            <div className='flex flex-row' style={{ \n                    width: '100%', \n                    height: height,  }}>\n                <ResponsiveContainer width={'100%'} height=\"100%\" >\n                    <AreaChart data={sampleData} margin={{ top: 20, right: sideMargins, bottom: 0, left: sideMargins }}>\n                    {showGrid && <CartesianGrid strokeDasharray=\"1 3\" />}\n                    {showXAxis && <XAxis dataKey={data?.keyPairs[0]} tick={{ fontSize: '12px'}}/>}\n                    {showYAxis && <YAxis width={20} tick={{ fontSize: '12px'}}/>}\n                    <Tooltip />\n                    <Area \n                        type={lineType === 'wavy' || lineType === 'monotone' ? 'monotone' : 'linear'}\n                        dataKey={data?.keyPairs[1]}\n                        stroke={`var(--${lineColor})`} \n                        fill={`var(--${lineColor})`} \n                        strokeWidth={lineWidth}\n                        dot={showDots} \n                        activeDot={{ r: 4 }}\n                    >\n                        {showLabels && (\n                            <LabelList \n                                dataKey={data?.keyPairs[1]} \n                                position=\"top\" \n                                style={{ fill: `var(--${lineColor})`, fontSize: 10 }} \n                            />\n                        )}\n                    </Area>\n                </AreaChart>\n            </ResponsiveContainer>\n            </div>\n        :\n        <>\n        <div className={emptyStyles} style={{ height: height, backgroundColor: `color-mix(in srgb, currentColor 8%, transparent)`}}>\n            <Icon icon='chart-up' />\n            <span className='font-normal text-sm'>\n                {emptyMessage}\n            </span>\n        </div>\n        </>\n        }\n        </div>\n    );\n}\n\nAreaChartComponent.propTypes = {\n    title: PropTypes.string,\n    width: PropTypes.oneOf(['auto', 'full', '1/2']),\n    height: PropTypes.oneOf(['92px', '120px', '240px', '360px']),\n    lineColor: PropTypes.oneOf(['primary', 'accent', 'base-content', 'base-0']),\n    lineWidth: PropTypes.oneOf(['1', '2', '3', '4']),\n    lineType: PropTypes.oneOf(['wavy', 'linear']),\n    showGrid: PropTypes.bool,\n    showDots: PropTypes.bool,\n    showLabels: PropTypes.bool,\n    showYAxis: PropTypes.bool,\n    showXAxis: PropTypes.bool,\n    backgroundColor: PropTypes.oneOf(['base-0', 'base-100', 'base-200']),\n    corners: PropTypes.oneOf(['none', 'sm', 'md', 'lg']),\n    emptyState: PropTypes.bool,\n    emptyMessage: PropTypes.string,\n    data: PropTypes.shape({\n        keyPairs: PropTypes.arrayOf(PropTypes.string),\n        valuePairs: PropTypes.arrayOf(PropTypes.array)\n    }),\n};\n\n"],"names":[],"mappings":"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"}