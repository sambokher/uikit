{"version":3,"file":"Avatar.js","sources":["../../src/react/Avatar.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types'\n\nexport default function Avatar(props) {\n    \n    const {\n        type = 'image',\n        bgColor = 'accent',\n        size = '28px',\n        indicatorType = 'none',\n        indicatorColor = 'success-content',\n        initials = 'A',\n        imageSrc = null,\n        notificationCount = 4,\n        outlineColor = null,\n        attributes,\n        listeners\n      } = props;\n\n    const cornerStyles = 'rounded-full';\n    const bgStyles = type == 'image' ? '' : `bg-${bgColor}` \n    const fontColor = bgColor == 'base-content' ? 'text-base-0' : bgColor?.startsWith('base') ? 'text-base-content' : `text-${bgColor}-content`\n\n    const initialsFontSize = {\n        '20px': 'text-xs !font-normal',   \n        '28px': 'text-sm',   \n        '32px': 'text-md',   \n        '40px': 'text-lg', \n        '48px': 'text-2xl'\n    }[size] || 'text-base'\n    \n    let classes = `flex-shrink-0 flex flex-row items-center justify-center font-medium relative  ${fontColor} ${cornerStyles} ${bgStyles} ${initialsFontSize}`\n    \n    const noImage = !imageSrc || imageSrc == '' || imageSrc == 'null' || imageSrc == 'undefined';\n    const imageColor = bgColor == 'auto' ? 'currentColor' : `var(--${bgColor})`\n    const ring = outlineColor && `0 0 0px 2px var(--${outlineColor}`\n    const styles = {        \n        backgroundImage: type == 'image' && !noImage ? `url(${imageSrc})` : 'none',\n        backgroundSize: 'cover',\n        // backgroundColor: `color-mix(in srgb, ${imageColor} 20%, transparent)`,\n        width: size, \n        height: size,\n        borderRadius: 9999, \n        boxShadow: `inset 0 0 1px rgba(0, 0, 0, 0.12), ${ring}`\n    };\n\n    \n    const statusSize = {\n        '20px': 'w-[10px] h-[10px] border shadow border-white',\n        '28px': 'w-3 h-3 border shadow border-white',\n        '32px': 'w-4 h-4 border shadow border-white',\n        '40px': 'w-4 h-4 border-2 shadow-md border-white', \n        '48px': 'w-5 h-5 border-2 shadow-md border-white'\n    }[size] || 'w-3 h-3';\n\n    const notificationSize = {\n        '20px': 'bg-transparent', \n        '28px': 'w-4 h-4 shadow border text-xs ',  \n        '32px': 'w-4 h-4 shadow border text-xs ', \n        '40px': 'w-4 h-4 shadow-md border text-sm',\n        '48px': 'w-5 h-5 shadow-md border text-base' \n    }[size] || 'w-6 h-6';\n    \n    const indicatorBgStyles = indicatorType == 'status' ? 'bg-'+indicatorColor : `bg-${indicatorColor.substring(0, indicatorColor.length - 8)} border-${indicatorColor.substring(0, indicatorColor.length - 8)}-focus`\n    \n    const indicatorTextStyles = indicatorColor == 'base-300' ? 'text-base-content' : `text-${indicatorColor}`\n    const indicatorStyles = `absolute ${indicatorBgStyles} ${indicatorType == 'status' ? 'bottom-0' : 'top-0'} right-0 \n        ${indicatorType == 'status' ? statusSize : notificationSize} rounded-full translate-x-1/4 \n        ${indicatorTextStyles} font-semibold flex items-center justify-center`\n\n    \n    const formattedInitials = initials?.length > 1 ? initials?.slice(0, 1) : initials;\n    \n    return (\n        <div\n        {...attributes} {...listeners} \n            className={classes} style={styles} \n        >\n        {noImage && type == 'image' &&\n        <svg width={size} height={size} viewBox=\"0 0 16 16\"  xmlns=\"http://www.w3.org/2000/svg\">\n        <rect width=\"16\" height=\"16\" rx=\"8\" fill={imageColor} fillOpacity=\"0.2\"/>\n        <path d=\"M4.64805 6.64443C5.0374 6.64443 5.30586 6.37969 5.30586 5.98662V4.6706C5.30586 4.27451 5.0374 4.01279 4.64805 4.01279C4.26474 4.01279 4 4.28056 4 4.6706V5.98662C4 6.37969 4.26474 6.64443 4.64805 6.64443ZM7.49063 8.92494C7.51318 8.92494 7.54551 8.92494 7.57178 8.92494C8.47637 8.92494 8.95595 8.44834 8.95595 7.54072V4.49785C8.95595 4.18662 8.7626 4 8.45811 4C8.14014 4 7.94678 4.18662 7.94678 4.49785V7.62861C7.94678 7.79892 7.81855 7.89922 7.67617 7.89922H7.34043C7.0585 7.89922 6.84258 8.11514 6.84258 8.39404C6.84258 8.73224 7.06826 8.92494 7.49063 8.92494ZM11.8542 6.64443C12.2308 6.64443 12.4956 6.37969 12.4956 5.98662V4.6706C12.4956 4.28056 12.2308 4.01279 11.8542 4.01279C11.4612 4.01279 11.1964 4.27451 11.1964 4.6706V5.98662C11.1964 6.37969 11.4612 6.64443 11.8542 6.64443ZM8.21025 12.079C9.34645 12.079 10.4895 11.5954 11.3119 10.77C11.4018 10.6868 11.4603 10.5571 11.4603 10.389C11.4603 10.0936 11.2414 9.89054 10.9618 9.89054C10.8095 9.89054 10.694 9.94374 10.5327 10.1087C9.97445 10.6805 9.10055 11.0765 8.21025 11.0765C7.35059 11.0765 6.47002 10.694 5.8915 10.1087C5.75039 9.97444 5.6416 9.89054 5.45869 9.89054C5.17607 9.89054 4.95713 10.0936 4.95713 10.389C4.95713 10.5369 5.01875 10.6598 5.11543 10.7632C5.90039 11.6193 7.07402 12.079 8.21025 12.079Z\" fill={imageColor} fillOpacity=\"0.85\"/>\n        </svg>}\n         {type == 'initials' && formattedInitials}\n         {indicatorType != 'none' && <div className={indicatorStyles}>{indicatorType == 'notification' && size != '20px' && notificationCount}</div> }\n        </div>\n    )\n}\nAvatar.propTypes = {\n    type: PropTypes.oneOf(['image', 'initials', 'icon']),\n    imageSrc: PropTypes.string,\n    bgColor: PropTypes.oneOf(['base-0', 'base-50', 'base-100', 'base-200', 'base-300', 'accent', 'primary', 'base-content', 'success-content', 'error-content', 'warning-content', 'base-content']),\n    size: PropTypes.oneOf(['16px', '20px', '24px', '28px', '32px', '40px', '48px']),\n    indicatorType: PropTypes.oneOf(['none', 'notification', 'status']),\n    indicatorColor: PropTypes.oneOf(['success-content', 'warning-content', 'info-content', 'error-content', 'base-300']),\n    notificationCount: PropTypes.number,\n    initials: PropTypes.string,\n    outlineColor: PropTypes.oneOf(['base-0', 'base-100', 'base-200', 'base-300', 'accent', 'primary', 'success', 'error']),\n};\n\n"],"names":[],"mappings":"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"}