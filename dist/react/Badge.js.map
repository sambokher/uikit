{"version":3,"file":"Badge.js","sources":["../../src/react/Badge.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function Badge(props) {\n    \n    const {\n        type = 'filled',\n        text = 'Badge',\n        color = 'success-content',\n        size = 'medium',\n        isPill = false,\n        alignSelf = 'auto',\n        attributes,\n        listeners\n      } = props;\n    \n    \n    const styleMap = {\n        'filled': color == 'base-200' ? `bg-base-200 text-base-content border-transparent` : `bg-${color} text-white border-transparent` ,\n        'outline': color == 'base-200' ? `text-base-600 border-base-300` : `text-${color} border-${color}`,\n        'light': color == 'base-200' ? `bg-base-100 text-base-content border-base-200` : `text-${color} border-transparent`\n    }\n    \n    const sizeStyleMap = {\n        small: `text-xs py-1 gap-1.5 ${isPill ? 'rounded-full px-2' : 'rounded px-1.5'}`,\n        medium: `text-sm py-1.5 gap-2 ${isPill ? 'rounded-full px-3' : 'rounded-md px-2'}`,\n    };\n    \n    const sizeStyles = sizeStyleMap[size]\n\n    let wrapperClasses = `flex font-semibold items-center flex-shrink-0 justify-center leading-tight self-${alignSelf} ${sizeStyles} ${styleMap[type]}`\n    \n    const truncateStyle = { overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap', maxWidth: 120,  }\n\n    return (\n        <div \n        {...attributes} {...listeners} \n            className={wrapperClasses} style={{\n                borderWidth: size == 'small' ? '1px' : '1.5px',\n                backgroundColor: type == 'light' && `color-mix(in srgb, var(--${color}) 16%, transparent)`\n            }}\n        >   \n            <span className='w-full' style={{...truncateStyle}} >\n            {text}\n            </span>\n        </div>\n    ); \n}\n\nBadge.propTypes = {\n    type: PropTypes.oneOf(['filled', 'outline', 'light']),\n    text: PropTypes.string,\n    color: PropTypes.oneOf(['info-content', 'primary', 'accent', 'base-200', 'success-content', 'base-content', 'warning-content', 'error-content']),\n    size: PropTypes.oneOf(['small', 'medium']),\n    isPill: PropTypes.bool,\n    alignSelf: PropTypes.oneOf(['auto', 'start', 'end', 'center'])\n};\n\n"],"names":[],"mappings":";;;AAGe,SAAS,KAAK,CAAC,KAAK,EAAE;AACrC;AACA,IAAI,MAAM;AACV,QAAQ,IAAA,GAAO,QAAQ;AACvB,QAAQ,IAAA,GAAO,OAAO;AACtB,QAAQ,KAAA,GAAQ,iBAAiB;AACjC,QAAQ,IAAA,GAAO,QAAQ;AACvB,QAAQ,MAAA,GAAS,KAAK;AACtB,QAAQ,SAAA,GAAY,MAAM;AAC1B,QAAQ,UAAU;AAClB,QAAQ,SAAA;AACR,OAAM,GAAI,KAAK,CAAA;AACf;AACA;AACA,IAAI,MAAM,WAAW;AACrB,QAAQ,QAAQ,EAAE,KAAA,IAAS,UAAA,GAAa,CAAC,gDAAgD,CAAE,GAAE,CAAC,GAAG,EAAE,KAAK,CAAC,8BAA8B,CAAE;AACzI,QAAQ,SAAS,EAAE,KAAA,IAAS,UAAW,GAAE,CAAC,6BAA6B,CAAA,GAAI,CAAC,KAAK,EAAE,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAA;AACA,QAAA,OAAA,EAAA,KAAA,IAAA,UAAA,GAAA,CAAA,6CAAA,CAAA,GAAA,CAAA,KAAA,EAAA,KAAA,CAAA,mBAAA,CAAA;AACA,MAAA;AACA;AACA,IAAA,MAAA,YAAA,GAAA;AACA,QAAA,KAAA,EAAA,CAAA,qBAAA,EAAA,MAAA,GAAA,mBAAA,GAAA,gBAAA,CAAA,CAAA;AACA,QAAA,MAAA,EAAA,CAAA,qBAAA,EAAA,MAAA,GAAA,mBAAA,GAAA,iBAAA,CAAA,CAAA;AACA,KAAA,CAAA;AACA;AACA,IAAA,MAAA,UAAA,GAAA,YAAA,CAAA,IAAA,EAAA;AACA;AACA,IAAA,IAAA,cAAA,GAAA,CAAA,gFAAA,EAAA,SAAA,CAAA,CAAA,EAAA,UAAA,CAAA,CAAA,EAAA,QAAA,CAAA,IAAA,CAAA,CAAA,EAAA;AACA;AACA,IAAA,MAAA,aAAA,GAAA,EAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,UAAA,EAAA,UAAA,EAAA,QAAA,EAAA,QAAA,EAAA,GAAA,KAAA;AACA;AACA,IAAA;AACA,QAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACA,QAAA,GAAA,UAAA,EAAA,GAAA,SAAA;AACA,YAAA,SAAA,EAAA,cAAA,EAAA,KAAA,EAAA;AACA,gBAAA,WAAA,EAAA,IAAA,IAAA,OAAA,GAAA,KAAA,GAAA,OAAA;AACA,gBAAA,eAAA,EAAA,IAAA,IAAA,OAAA,IAAA,CAAA,yBAAA,EAAA,KAAA,CAAA,mBAAA,CAAA;AACA,aAAA,EAAA;AACA;AACA,cAAA,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,EAAA,SAAA,EAAA,QAAA,EAAA,KAAA,EAAA,CAAA,GAAA,aAAA,CAAA,EAAA;AACA,cAAA,IAAA;AACA,aAAA;AACA,SAAA;AACA,MAAA;AACA,CAAA;AACA;AACA,KAAA,CAAA,SAAA,GAAA;AACA,IAAA,IAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,QAAA,EAAA,SAAA,EAAA,OAAA,CAAA,CAAA;AACA,IAAA,IAAA,EAAA,SAAA,CAAA,MAAA;AACA,IAAA,KAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,cAAA,EAAA,SAAA,EAAA,QAAA,EAAA,UAAA,EAAA,iBAAA,EAAA,cAAA,EAAA,iBAAA,EAAA,eAAA,CAAA,CAAA;AACA,IAAA,IAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,OAAA,EAAA,QAAA,CAAA,CAAA;AACA,IAAA,MAAA,EAAA,SAAA,CAAA,IAAA;AACA,IAAA,SAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,MAAA,EAAA,OAAA,EAAA,KAAA,EAAA,QAAA,CAAA,CAAA;AACA,CAAA;;;;"}