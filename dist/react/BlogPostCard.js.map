{"version":3,"file":"BlogPostCard.js","sources":["../../src/react/BlogPostCard.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from './index'\nimport { iconMap } from './iconMap'\nimport { useMemo } from 'react';\n\nconst allIconNames = Object.keys(iconMap) || []\n\nexport default function BlogPostCard(props) {\n\n    const {\n        imageSrc = null,\n        width = '200px',\n        corners = 'md',\n        imageAspectRatio = '2 / 1',\n        textSize = 'small',\n        title = \"Post Title\",\n        posted_date = \"Jun 2, 2023\",\n        author_name = \"Author Name\",\n        description = \"Short description that should be about 80-100 characters long.\",\n        defaultIconSet,\n        attributes,\n        listeners\n      } = props;\n\n    \n    const sizeStyles = `w-full h-auto ${textSize == 'small' ? 'text-sm' : 'text-base'}`\n    const truncateStyle = { overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap'}\n\n    let wrapperClasses = `flex flex-col items-stretch justify-start gap-3 ${sizeStyles}`\n\n    const noImage = !imageSrc;\n    const imageStyles = useMemo(() => ({\n        background: !noImage && `linear-gradient(rgba(0, 0, 0, 0.04), rgba(0, 0, 0, 0.12)), url(${imageSrc}) no-repeat center center / cover`, \n        backgroundSize: 'cover', \n        backgroundColor: `color-mix(in srgb, var(--base-content) 20%, transparent)`, \n        aspectRatio: imageAspectRatio\n    }), [imageSrc, noImage, imageAspectRatio]);\n\n    const cornerStyles = corners === 'none' ? '' : `rounded-${corners}`;\n    const titleFont = textSize == 'small' ? 'text-base' : 'text-lg';\n    const smallerFont = textSize == 'small' ? 'text-xs' : 'text-sm';\n\n    return (\n        <div \n        {...attributes} {...listeners} \n        className={wrapperClasses} style={{maxWidth: width}}\n        >\n        \n        {/* IMAGE / THUMBNAIL */}\n        <div className={`relative w-full aspect-square flex items-center justify-center ${cornerStyles}`} style={imageStyles}>\n            {noImage && <Icon icon={'post'} defaultIconSet={defaultIconSet} className='flex-shrink-0' />}\n        </div>\n        \n        {/* CONTENT BLOCK */}\n        <div className={`flex flex-col flex-grow gap-1.5`} style={truncateStyle}>\n            \n            {/* Title */}\n            <h3 className={`${titleFont} font-semibold `} style={truncateStyle}>\n{title}\n            </h3>\n\n            {/* post info */}\n            {(author_name || posted_date ) && \n            <div className={`flex flex-row justify-between w-full gap-2 items-end ${smallerFont}`} style={{maxWidth: '100%'}}>\n            <span className='font-medium truncate' style={truncateStyle}>\n{author_name}\n            </span>\n            {posted_date && <div className='flex-shrink-0 flex flex-row items-center gap-1.5'>\n{posted_date}\n                <Icon icon='calendar' className='flex-shrink-0 scale-75' />\n            </div>\n            }</div>}\n            {/* Description Lines */}\n            {description && <div className={`${smallerFont} text-justify `} >\n{description}\n            </div>}\n        </div>\n        </div>\n    );\n}\n\n\nBlogPostCard.propTypes = {\n    imageSrc: PropTypes.string,\n    imageAspectRatio: PropTypes.oneOf(['1 / 1', '2 / 1', '3 / 1', '4 / 1']),\n    textSize: PropTypes.oneOf(['small', 'medium']),\n    title: PropTypes.string,\n    icon: PropTypes.oneOf(['none', ...allIconNames]),\n    posted_date: PropTypes.string,\n    author_name: PropTypes.string,\n    description: PropTypes.string,\n    width: PropTypes.oneOf(['100%', '200px', '320px']),\n    corners: PropTypes.oneOf(['none', 'sm', 'md', 'lg', 'xl'])\n};\n\n"],"names":[],"mappings":"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"}