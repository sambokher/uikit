{"version":3,"file":"Button.js","sources":["../../src/react/Button.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Loader } from './index'\nimport { iconMap } from './iconMap'\n\nconst allIconNames = Object.keys(iconMap) || []\n\nexport default function Button(props) {\n    \n    const {\n        leftIcon = 'none',\n        rightIcon = 'none',\n        text = 'Button',\n        \n        color = 'base',\n        style = 'light',\n\n        size = 'medium',\n        width = 'auto',\n        \n        marginTop,\n        state = 'default',\n        onClick = () => {},\n        hideOnMobile=false,\n        attributes,\n        listeners\n      } = props;\n\n    const isDisabled = state == 'disabled'\n    const isLoading = state == 'loading'\n    const isActive = state == 'active'\n\n    /* Filled */\n    const bgColor = color == 'base' ? 'base-200' : (color == 'primary' || color == 'accent') ? color : color+'-content'\n    const textColor = color == 'base' ? 'base-content' : 'base-0'\n    const statusStyles = (isDisabled || isLoading ) ? '' : isActive ? 'brightness-90' : 'hover:brightness-110 active:brightness-90'\n    const filledStyle = `bg-${bgColor} text-${textColor} ${statusStyles}`\n\n    /* Outlined */\n    const outlinedColor = color == 'base' ? 'base-700' : (color == 'primary' || color == 'accent') ? color : color+'-content'\n    const outlineStatusStyles = (isDisabled || isLoading )  ? '' : isActive ? 'bg-current-10' : 'hover:bg-current-10 active:bg-transparent'\n    const outlinedStyle = `ring-1 ring-inset ring-${outlinedColor} text-${outlinedColor} ${outlineStatusStyles}`\n\n    /* Light */\n    const lightColor = color == 'base' ? 'base-100' : (color == 'primary' || color == 'accent') ? color+'-content' : color\n    const lightTextColor = (color == 'primary' || color == 'accent') ? color : color+'-content'\n    const lightStatusStyles = (isDisabled || isLoading ) ? '' : isActive ? `bg-${lightColor}/75` : `hover:bg-${lightColor}/75`\n    const lightStyle = `bg-${lightColor} text-${lightTextColor} ${lightStatusStyles}`\n\n    /* Ghost */\n    const ghostStatusStyles = (isDisabled || isLoading ) ? '' : isActive ? `bg-current-10` : `hover:bg-current-10`\n    const ghostStyle = `text-${lightTextColor} ${ghostStatusStyles}`\n\n    /* Link */\n    const linkStatusStyles = !(isDisabled || isLoading || isActive)  ? `hover:underline opacity-80 hover:opacity-100` : ''\n    const linkStyle = `text-${lightTextColor} ${linkStatusStyles}`\n    \n    const fontStyles = `font-medium` \n    \n    const styleMap = {\n        filled: filledStyle,\n        outlined: outlinedStyle,\n        ghost: ghostStyle,\n        link: linkStyle,\n        light: lightStyle\n    }\n    let typeStyles = styleMap[style]\n    \n    \n    let sizeStyles = `py-2 px-3 gap-3 text-sm`;  // default size\n    sizeStyles = size == 'small' ? `py-1 px-1.5 gap-1 text-xs` : size == 'large'  ? `py-3 px-4 gap-4 text-base` : sizeStyles\n\n    const widthStyle = width == 'auto' ? `w-auto` : `w-${width}`\n    const cornerStyles = size == \"small\" ? \"rounded\" : size == \"large\" ? \"rounded-lg\" : \"rounded-md\"\n    \n    let classes = `${hideOnMobile ? 'hidden md:flex' : ''}\n        relative flex flex-row items-center transition-all box-border cursor-pointer justify-between \n        ${fontStyles} ${typeStyles} ${sizeStyles} ${cornerStyles} ${widthStyle}\n        ${isDisabled ? 'opacity-50 saturate-50 !cursor-not-allowed' : ''}`\n    \n     const LeftIconComponent = leftIcon !== 'none' ? <Icon icon={leftIcon?.toLowerCase()} className={'scale-90'}/> : null;\n     const RightIconComponent = rightIcon !== 'none' ? <Icon icon={rightIcon?.toLowerCase()}  className={'scale-[0.8]'}/> : null;\n\n    const loaderColor = 'current'\n\n    // 'mt-0.5', 'mt-1', 'mt-1.5', 'mt-2', 'mt-3', 'mt-4', 'mt-6', 'mt-8', 'mt-12', 'mt-16',\n    // mt-[1px] mt-[2px] mt-[6px] mt-[8px] mt-[12px] mt-[16px] mt-[24px] mt-[32px] mt-[40px] mt-[48px] mt-[56px] mt-[64px]\n\n    return (\n        <button  type=\"button\" \n            className={classes} {...attributes} {...listeners} \n            style={{marginTop: marginTop}}\n            onClick={(e)=> !isDisabled && onClick(e)}\n            >\n            <div className={`flex flex-row items-center justify-end flex-grow ${isLoading ? 'invisible' : ''}`}>\n                {LeftIconComponent}\n            </div>\n            <div className='flex-shrink-0 max-w-full box-border'>\n            {isLoading && <div className='absolute top-1/2 left-1/2 -translate-y-1/2 -translate-x-1/2'>\n                <Loader \n                size={size == 'small' ? '12px' : '16px'}\n                color={loaderColor}\n                type='spinner'\n                opacity={(style == 'filled') ? '50' : '100'}\n                />\n            </div>}\n             <span className={`${isLoading ? 'opacity-0' : ''} flex flex-row items-center gap-2 whitespace-nowrap truncate max-w-full`}>\n{text}\n            </span>\n            </div>\n            <div className={`flex flex-row items-center justify-end flex-grow ${isLoading && 'invisible'}`}>\n                {RightIconComponent}\n            </div>\n        </button>\n    ); \n}\n\nButton.propTypes = {\n    width: PropTypes.oneOf([\"auto\", \"1/2\", \"full\"]),\n    text: PropTypes.string,\n    state: PropTypes.oneOf(['default', 'disabled', 'loading', 'active']),\n    color: PropTypes.oneOf(['base', 'primary', 'accent', 'warning', 'info', 'success', 'error']),\n    style: PropTypes.oneOf(['filled', 'outlined', 'ghost', 'link', 'light']),\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\n    leftIcon: PropTypes.oneOf(['none', ...allIconNames]),\n    rightIcon: PropTypes.oneOf(['none', ...allIconNames]),\n    marginTop:  PropTypes.oneOf(['4px', '6px', '8px', '12px', '16px', '24px', '32px' ]),\n    hideOnMobile: PropTypes.bool,\n    onClick: PropTypes.func, \n};\n\n"],"names":[],"mappings":"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"}