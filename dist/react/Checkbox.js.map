{"version":3,"file":"Checkbox.js","sources":["../../src/react/Checkbox.js"],"sourcesContent":["import PropTypes from 'prop-types'\nimport React, { useEffect, useState } from 'react';\n\nexport default function Checkbox(props) {\n    \n    const {\n        width = 'auto',\n        state = 'default',\n        label = 'checkbox',\n        style = 'standard',\n        isChecked = false,\n        isPartial = false,\n        size = 'medium',\n        onChange = () => {},\n        attributes,\n        listeners\n      } = props;\n    \n    const [checked, setChecked] = useState(isChecked); \n    useEffect(() => {\n        setChecked(isChecked);\n    }, [isChecked]);\n    \n    const onCheckboxChange = (e) => {\n        if (onChange) {\n            onChange(e);\n        } else {\n            setChecked(!checked)\n        }\n    }\n\n    const sizeStyles = size == 'small' ? `gap-1.5 text-xs`: size == 'large' ? `gap-3 text-base` : `gap-2 text-sm`;\n    const paddingStyles = size == 'small' ? `py-1 px-1.5` : size == 'large' ? `py-2 px-3` : `py-1.5 px-2`;\n    const borderStyles = checked ? `border border-primary` : `border border-base-200`\n    const bgSttyles = checked ? `bg-transparent` : `bg-transparent hover:bg-base-100 transition-all duration-75`\n    \n    const styleMap  = {\n        standard: `flex items-start ${sizeStyles} cursor-default w-${width}`, \n        button: `flex flex-row ${paddingStyles} rounded items-center ${sizeStyles} cursor-pointer w-${width} ${borderStyles} ${bgSttyles}`\n    }\n\n    const fillColorMap = {\n        'default': `border border-primary bg-primary`,\n        'warning': `border border-warning-content bg-warning-content`,\n        'success': `border border-success-content bg-success-content`,\n        'disabled': 'bg-base-200 border border-base-300 bg-base-200'\n    };\n\n    const stateStyles = checked ? fillColorMap[state] : 'border border-base-300'\n    \n    let wrapperClasses = styleMap[style] || styleMap['standard']\n\n    const checkboxDimensions = \n        style == 'standard' ? \n        size == 'small' ? 'w-4 h-4 mt-px rounded' : size == 'large' ? 'w-6 h-6 rounded-lg' : 'w-5 h-5 rounded-md' :\n        size == 'small' ? 'w-3 h-3 mt-px rounded-sm' : size == 'large' ? 'w-5 h-5 rounded-md' : 'w-4 h-4 rounded'\n    const checkboxClasses = `${checkboxDimensions} flex items-center justify-center ${stateStyles} `    \n\n    const labelClasses = `whitespace-nowrap ${state == 'disabled' ? 'opacity-60' : ''}`\n    const checkColor = 'base-0'\n    const noLabel = !label || label == ''\n    return (\n        <div \n        {...attributes} {...listeners} \n            className={wrapperClasses} \nonClick={onCheckboxChange}\n        >\n            <div className=\"relative flex-shrink-0 inline-block\">\n                <span className={checkboxClasses}>\n                    {checked ? !isPartial ? \n                        <svg className=\"w-5 h-5\" viewBox=\"0 0 20 20\" aria-hidden=\"true\" fill={`var(--${checkColor})`}>\n                            <path fillRule=\"evenodd\" d=\"M6.293 9.293a1 1 0 011.414 0L10 11.586l2.293-2.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                        </svg> :\n                        <svg className=\"w-5 h-5\" viewBox=\"0 0 20 20\" aria-hidden=\"true\" fill={`var(--${checkColor})`}>\n                            <rect x=\"4\" y=\"9\" width=\"12\" height=\"2\" />\n                        </svg>\n                        : null\n                    }\n                </span>\n            </div>\n            {label && <span className={labelClasses} style={{textWrap: 'nowrap'}}>\n{label}\n            </span>}\n        </div>\n    );\n}\nCheckbox.propTypes = {\n    width: PropTypes.oneOf([\"auto\", \"1/2\", \"full\"]),\n    type: PropTypes.oneOf(['standard', 'button']),\n    state: PropTypes.oneOf(['default', 'warning', 'disabled', 'success']),\n    label: PropTypes.string,\n    isChecked: PropTypes.bool,\n    isPartial: PropTypes.bool,\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\n    onChange: PropTypes.func\n    \n};\n\n"],"names":[],"mappings":"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"}