{"version":3,"file":"CodeSnippet.js","sources":["../../src/react/CodeSnippet.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types'\nimport { useState } from 'react';\nimport { Button, Select } from './index';\n\nconst sample = `function greet(name) {\n    const greeting = \"Hello, \" + name + \"!\";\n    console.log(greeting);\n}\n\ngreet(\"Alice\");\ngreet(\"Bob\");`\n\nexport default function CodeSnippet(props) {\n\n    const {\n        size = 'medium',\n        width = 'auto',\n        hasOutline = true,\n        text = sample,\n        attributes,\n        listeners\n      } = props;\n\n\n    const widthStyle = width == 'auto' ? `w-auto` : `w-${width}`\n    const sizeStyles =  size == 'small' ? `py-1 px-1.5 gap-1.5 text-xs` : `py-1.5 px-2 gap-3 text-sm`;\n    const cornerStyles = size == \"small\" ? \"rounded\" :  \"rounded-md\"\n    const headerCorners = size == \"small\" ? \"rounded-t\" :  \"rounded-t-md\"\n    const bgStyles = `bg-base-0 text-base-content`\n    const borderStyles = hasOutline ? `border border-base-300` : `border border-transparent`\n    let wrapperClasses = `flex flex-col ${widthStyle} ${borderStyles} ${cornerStyles} ${bgStyles} relative group`\n\n    const snippetClasses = `w-full ${sizeStyles}`\n\n    const [copied, setCopied] = useState(false)\n\n    const copyToClipboard = () => {\n      navigator.clipboard.writeText(text).then(() => {\n        setCopied(true);\n        setTimeout(() => setCopied(false), 3000); \n      })\n      .catch(err => {\n        console.log('Something went wrong', err);\n      });\n    }\n\n    return (\n        <div\n            className={wrapperClasses}\n            {...attributes} {...listeners} \n            >\n            <div className={`flex flex-row items-center justify-between w-full ${sizeStyles} bg-base-100 ${headerCorners}`}>\n                <Select size='small' options={['javascript', 'python', 'sql']} defaultValue='Javascript' bgColor='none'/>\n                <Button \n                    size={'small'}\n                    text={'copy'} \n                    type={'secondary'} \n                    style='outlined' \n                    leftIcon={copied ? 'check' : 'copy'}\n                    onClick={copyToClipboard}/>\n            </div>\n            <pre className={snippetClasses} style={{ whiteSpace: 'pre-wrap' }}>\n{text}\n            </pre>\n        </div>\n    );\n}\n\nCodeSnippet.propTypes = {\n    width: PropTypes.oneOf(['auto', '1/2', 'full']),\n    size: PropTypes.oneOf(['small', 'medium']),\n    theme: PropTypes.oneOf(['dark', 'light']),\n    hasOutline: PropTypes.bool,\n    text: PropTypes.string,\n};\n\n"],"names":[],"mappings":"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"}