{"version":3,"file":"CollapsibleSidebar.js","sources":["../../src/react/CollapsibleSidebar.js"],"sourcesContent":["import PropTypes from 'prop-types'\nimport React, { useEffect, useState } from 'react'\nimport { UserMenu, Sidebar, SidebarLink, ButtonIcon, Logo } from './index';\n\nconst sampleTopLinks = [\n    {text: 'Home', icon: 'home', onClick: ()=>{}},\n    {text: 'Assessment', icon: 'activity', onClick: ()=>{}, \n        sublinks: [\n            {text: 'Sublink 1', indentLevel: '1', icon: 'none', onClick: ()=>{}},\n            {text: 'Sublink 2', indentLevel: '1', icon: 'none', onClick: ()=>{}},\n        ]\n    },\n    {text: 'Contact', icon: 'people', onClick: ()=>{}},\n]\n\nconst sampleBottomLinks = [\n    {text: 'Settings', icon: 'settings', onClick: ()=>{}},\n    {text: 'Logout', icon: 'log-out', onClick: ()=>{}},\n]\n\nexport default function CollapsibleSidebar(props) {\n    \n    const { \n        bgColor = 'base-0',\n        state = 'openOnClick',\n        logoColor = 'normal', \n        userMenu = 'top',\n        expandWidth = '280px',\n\n        topLinks = sampleTopLinks,\n        bottomLinks = sampleBottomLinks,\n        assets,\n        attributes, \n        } = props\n    \n    \n    const [activeLink, setActiveLink] = useState(topLinks[0]?.text || null)\n    const [isOpen, setIsOpen] = useState(state === 'alwaysOpen')\n    useEffect(() => {\n        setIsOpen(state === 'alwaysOpen')\n    }, [state])\n\n    let classes = `relative flex flex-col h-auto items-start flex-shrink-0 user-select-none transition-all duration-300`\n\n    const listeners = {\n        onClick: () => state === 'openOnClick' && !isOpen && setIsOpen(true),\n        onMouseOver: () => state === 'openOnHover' && setIsOpen(true),\n        onMouseOut: () => state === 'openOnHover' && setIsOpen(false),\n    }\n    \n    function renderUserMenu() {\n        return (\n            <div className='flex flex-row relative'\n            style={{\n                marginLeft: `-2px`,\n                // marginRight: `calc(${spacing} / -2)`,\n                // width: `calc(100% + ${spacing})`,\n            }}\n            >\n            <UserMenu \n                isActive={activeLink === 'Profile'}\n                isCollapsed={!isOpen} \n                avatarType='initials'\n                name='John Doe'\n                width={'full'}\n                onClick={() => setActiveLink('Profile')}\n                />\n            </div>\n        )\n        \n    }\n    return (\n        <div\n        {...attributes} {...listeners} \n        className={classes}\n        style={{\n            width: isOpen ? expandWidth : 60, \n            minHeight: '100%',\n        }}\n        >\n        <Sidebar\n            background={bgColor} \n            width={'100%'}\n            paddingX={'12px'}\n            alignItems={'start'}\n            justifyContent={'between'}\n            paddingY={'12px'}\n            gap={'8px'}\n            >\n            \n            {/* Top block */}\n            <div className='flex flex-col items-start gap-2 w-full relative'>\n                <div className={`flex flex-row w-full justify-between items-center text-sm transition-all px-1 my-2`}>\n                    <Logo \n                        type={'symbol'} \n                        size={'28px'} \n                        color={logoColor}\n                        assets={assets}\n                        />\n                    <div className={`${(!isOpen || state === 'alwaysOpen' || state == 'openOnHover')? 'opacity-0 hidden' : 'opacity-50'}`}>\n                        <ButtonIcon\n                            icon={'chevron-left'}\n                            size={'small'}\n                            type={'link'}\n                            onClick={() => setIsOpen(false)}\n                        />\n                    </div>\n                </div>\n            {userMenu == 'top' && renderUserMenu()}\n            {topLinks.map((link, index) => (\n                <SidebarLink \n                    key={index}\n                    isCollapsed={!isOpen} \n                    text={link.text}\n                    leftIcon={link.icon}\n                    isActive={link.text === activeLink}\n                    onClick={() => setActiveLink(link.text)}\n                    >\n                        {link.sublinks && link.sublinks.map((sublink, index) => (\n                        <SidebarLink\n                            key={index}\n                            isCollapsed={!isOpen}\n                            text={sublink.text}\n                            leftIcon={sublink.icon}\n                            indentLevel={sublink.indentLevel}\n                            isActive={sublink.text === activeLink}\n                            onClick={(e) => {e.stopPropagation(); setActiveLink(sublink.text)}}\n                            />\n                    ))}\n                    </SidebarLink>\n            ))}\n            </div>\n                \n            {/* bottom block */}\n            <div className='flex flex-col items-start gap-2 w-full relative'>\n            {bottomLinks.map((link, index) => (\n                <SidebarLink \n                    key={index}\n                    isCollapsed={!isOpen} \n                    text={link.text}\n                    isActive={link.text === activeLink}\n                    leftIcon={link.icon}\n                    onClick={() => setActiveLink(link.text)}\n                    />))}\n            {userMenu == 'bottom' && renderUserMenu()}\n            </div>\n        </Sidebar>  \n        </div>\n    )\n}\n\nCollapsibleSidebar.propTypes = {\n    bgColor: PropTypes.oneOf(['base-0', 'base-50', 'base-100', 'base-200', 'base-700', 'base-content', 'primary', 'accent']),\n    state: PropTypes.oneOf(['openOnClick', 'openOnHover', 'alwaysOpen', 'alwaysClosed']),\n    expandWidth: PropTypes.oneOf(['240px', '280px', '320px']),\n    logoColor: PropTypes.oneOf(['normal', 'inverted']),\n    openStyle: PropTypes.oneOf(['grow', 'overflow']),\n    userMenu: PropTypes.oneOf(['top', 'bottom', 'none']),\n    activeLink: PropTypes.string,\n    topLinks: PropTypes.arrayOf(PropTypes.shape({\n        text: PropTypes.string,\n        icon: PropTypes.string,\n        onClick: PropTypes.func,\n    })), \n    bottomLinks: PropTypes.arrayOf(PropTypes.shape({\n        text: PropTypes.string,\n        icon: PropTypes.string,\n        onClick: PropTypes.func,\n    }))\n\n}\n\n"],"names":[],"mappings":"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"}