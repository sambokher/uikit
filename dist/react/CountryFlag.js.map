{"version":3,"file":"CountryFlag.js","sources":["../../src/react/CountryFlag.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { allFlags } from './assets/flags/flags'\nimport * as Flags from './assets/flags/index'\n\nconst countryNames = allFlags.map(f => f.name); \n\nexport default function CountryFlag(props) {\n    \n    const {\n        country = 'United States of America',\n        corners = 'none',\n        aspectRatio = '4x3',\n        height = '16px',\n        attributes,\n        listeners\n      } = props;\n    \n    let classes = `flex-shrink-0 flex-grow-0 rounded-${corners}`\n\n    // Find correct flag SVG\n    const flag = allFlags.find(f => f.name === country);\n    const aspectSuffix = aspectRatio === 'square' ? '1By1' : '4By3';\n    const flagCodeCamel = flag.code\n    const flagSvg = Flags[`${flagCodeCamel}${aspectSuffix}`];\n    const imageStyles = {\n        backgroundImage: flagSvg ? `url(${flagSvg})` : placeholderImg(),\n        backgroundSize: 'cover',\n        height: height, \n        aspectRatio: aspectRatio === 'square' ? '1 / 1' : '4 / 3'\n    };\n    \n    return (\n        <div\n            {...attributes} {...listeners} \n            className={classes}\n            style={imageStyles}\n        />\n    );\n}\n\nfunction placeholderImg() {\n    const svg = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"none\">\n                    <rect x=\"1\" y=\"1\" width=\"100\" height=\"32\" fill=\"#EEEEEE\" /> <!-- Top rectangle with lightest grey -->\n                    <rect x=\"1\" y=\"33\" width=\"100\" height=\"34\" fill=\"#CCCCCC\" /> <!-- Middle rectangle with medium grey -->\n                    <rect x=\"1\" y=\"67\" width=\"100\" height=\"33\" fill=\"#AAAAAA\" /> <!-- Bottom rectangle with darkest grey -->\n                 </svg>`;\n    return `url('data:image/svg+xml;utf8,${encodeURIComponent(svg)}')`;\n}\n\n\nCountryFlag.propTypes = {\n    country: PropTypes.oneOf(['none', ...countryNames]),\n    corners: PropTypes.oneOf(['none', 'sm', 'base', 'md', 'lg', 'full']),\n    aspectRatio: PropTypes.oneOf(['square', '4x3']),\n    height: PropTypes.oneOf(['12px', '16px', '20px', '24px', '28px', '32px']),\n};\n\n"],"names":["Flags"],"mappings":";;;;;AAKA,MAAM,YAAA,GAAe,QAAQ,CAAC,GAAG,CAAC,CAAA,IAAK,CAAC,CAAC,IAAI,CAAC,CAAA;AAC9C;AACe,SAAS,WAAW,CAAC,KAAK,EAAE;AAC3C;AACA,IAAI,MAAM;AACV,QAAQ,OAAA,GAAU,0BAA0B;AAC5C,QAAQ,OAAA,GAAU,MAAM;AACxB,QAAQ,WAAA,GAAc,KAAK;AAC3B,QAAQ,MAAA,GAAS,MAAM;AACvB,QAAQ,UAAU;AAClB,QAAQ,SAAA;AACR,OAAM,GAAI,KAAK,CAAA;AACf;AACA,IAAI,IAAI,OAAQ,GAAE,CAAC,kCAAkC,EAAE,OAAO,CAAC,EAAA;AAC/D;AACA;AACA,IAAA,MAAA,IAAA,GAAA,QAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,CAAA,IAAA,KAAA,OAAA,CAAA,CAAA;AACA,IAAA,MAAA,YAAA,GAAA,WAAA,KAAA,QAAA,GAAA,MAAA,GAAA,MAAA,CAAA;AACA,IAAA,MAAA,aAAA,GAAA,IAAA,CAAA,KAAA;AACA,IAAA,MAAA,OAAA,GAAAA,KAAA,CAAA,CAAA,EAAA,aAAA,CAAA,EAAA,YAAA,CAAA,CAAA,CAAA,CAAA;AACA,IAAA,MAAA,WAAA,GAAA;AACA,QAAA,eAAA,EAAA,OAAA,GAAA,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA,CAAA,GAAA,cAAA,EAAA;AACA,QAAA,cAAA,EAAA,OAAA;AACA,QAAA,MAAA,EAAA,MAAA;AACA,QAAA,WAAA,EAAA,WAAA,KAAA,QAAA,GAAA,OAAA,GAAA,OAAA;AACA,KAAA,CAAA;AACA;AACA,IAAA;AACA,QAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACA,YAAA,GAAA,UAAA,EAAA,GAAA,SAAA;AACA,YAAA,SAAA,EAAA,OAAA;AACA,YAAA,KAAA,EAAA,WAAA,EAAA;AACA,SAAA;AACA,MAAA;AACA,CAAA;AACA;AACA,SAAA,cAAA,GAAA;AACA,IAAA,MAAA,GAAA,GAAA,CAAA;AACA;AACA;AACA;AACA,uBAAA,CAAA,CAAA;AACA,IAAA,OAAA,CAAA,6BAAA,EAAA,kBAAA,CAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,CAAA;AACA;AACA;AACA,WAAA,CAAA,SAAA,GAAA;AACA,IAAA,OAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,MAAA,EAAA,GAAA,YAAA,CAAA,CAAA;AACA,IAAA,OAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;AACA,IAAA,WAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,QAAA,EAAA,KAAA,CAAA,CAAA;AACA,IAAA,MAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;AACA,CAAA;;;;"}