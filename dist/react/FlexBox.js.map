{"version":3,"file":"FlexBox.js","sources":["../../src/react/FlexBox.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { spacingMap } from './helpers.js';\n\n// tailwindcss safelist\n// gap-0.5 gap-1 gap-1.5 gap-2 gap-2.5 gap-3 gap-3.5 gap-4 gap-5 gap-6 gap-8 gap-10 gap-12 \n// px-0.5 px-1 px-1.5 px-2 px-2.5 px-3 px-3.5 px-4 px-5 px-6 px-8 px-10 px-12\n// py-0.5 py-1 py-1.5 py-2 py-2.5 py-3 py-3.5 py-4 py-5 py-6 py-8 py-10 py-12\n\nexport default function FlexBox(props) {\n        \n    const {\n        direction = \"flex-col\",\n        width = \"full\",\n        height = \"h-auto\",\n        paddingX = null,\n        paddingY = null,\n        background = null,\n        bgOpacity = null, \n        hasOutline = false,\n        flexWrap = \"nowrap\",\n        corners = \"none\",\n        gap = null,\n        alignItems = \"start\",\n        justifyContent = \"start\",\n        textSize = \"auto\",\n        maxWidth = null,\n        minWidth = null,\n        maxHeight = null,\n        minHeight = null,\n        selfAlign = \"auto\",\n        display = true,\n        bgImageSrc = null,\n        fontColor = \"auto\",\n        children,\n        attributes,\n        listeners\n      } = props;\n\n    const bgStyles = background ? `bg-${background}` : '';\n    const cornerStyles = corners === 'none' ? '' : `rounded-${corners}`;\n    const widthStyles = `w-${width} max-w-full ${maxWidth ? `max-w-[${maxWidth}px]` : ''} ${minWidth ? `min-w-[${minWidth}px]` : ''}`;\n    const heightStyles = `${height} ${maxHeight ? `max-h-[${maxHeight}px]` : ''} ${minHeight ? `min-h-[${minHeight}px]` : ''}`;\n    const fontSize = textSize != 'auto' ? 'text-'+textSize : '';\n    const borderStyles = hasOutline ? 'border border-base-300' : '';\n    const gapStyles = gap ? `gap-${spacingMap[gap]}` : '';\n    const paddingStyles = `${paddingX ? ` px-${spacingMap[paddingX]}` : ''}${paddingY ? ` py-${spacingMap[paddingY]}` : ''}`;\n    const wrapStyles = `flex-${flexWrap}`;\n    const alignItemsStyles = alignItems ? `items-${alignItems}` : '';\n    const justifyContentStyles = justifyContent ? `justify-${justifyContent}` : '';\n    const inheritFontStyle = (background == 'none' || !background) ? 'text-inherit' : background == 'base-900' ? `text-base-0` : background?.startsWith('base') ? 'text-base-content' : `text-${background}-content`\n    const fontStyles = fontColor == 'auto' ? inheritFontStyle : `text-${fontColor}`\n\n    let classes = `flex ${direction} ${wrapStyles} ${widthStyles} self-${selfAlign} ${fontStyles} ${fontSize} ${bgStyles} ${borderStyles} ${gapStyles} ${paddingStyles} ${cornerStyles} ${alignItemsStyles} ${justifyContentStyles} ${heightStyles}`\n    \n    const inLineStyles = {\n        background: bgImageSrc && `linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.5)), url(${bgImageSrc}) no-repeat center center / cover`, \n        backgroundColor: bgOpacity ? `color-mix(in srgb, var(--${background}) ${bgOpacity}%, transparent)` : null, \n        maxWidth: maxWidth, \n        minWidth: minWidth,\n        maxHeight: maxHeight,\n        minHeight: minHeight\n    };\n\n    const filteredInLineStyles = Object.fromEntries(\n        Object.entries(inLineStyles).filter(([_, value]) => value != null)\n    );\n\n    if (display) return (\n        <div \n        {...attributes} {...listeners} \n        className={classes}\n        style={Object.keys(filteredInLineStyles).length > 0 ? filteredInLineStyles : undefined}>\n        {children}\n        </div>\n    );\n}\n\n\nFlexBox.propTypes = {\n    background: PropTypes.oneOfType([\n        PropTypes.oneOf([\"base-0\", 'base-50', \"base-100\", \"base-200\", \"primary\", \"accent\", \"base-900\" ]),\n        PropTypes.string]),\n    bgOpacity: PropTypes.oneOf([\"10\", \"20\", \"30\", \"40\", \"50\", \"60\", \"70\", \"80\", \"90\", \"100\"]),\n    direction: PropTypes.oneOf([\"flex-col\", \"flex-row\"]),\n    width: PropTypes.oneOf([\"full\", \"auto\", \"1/2\", \"1/3\", \"1/4\", \"2/3\", '3/4']),\n    height: PropTypes.oneOf(['h-full', 'h-1/2', 'h-1/3', 'h-1/4', 'h-2/3', 'h-[integer]px', 'h-auto']),\n    \n    paddingX: PropTypes.oneOf([\"2px\", \"4px\", \"6px\", \"8px\", \"10px\", \"12px\", \"16px\", \"24px\", \"32px\", \"48px\"]),\n    paddingY: PropTypes.oneOf([\"2px\", \"4px\", \"6px\", \"8px\", \"10px\", \"12px\", \"16px\", \"24px\", \"32px\", \"48px\"]),\n    gap: PropTypes.oneOf([\"2px\", \"4px\", \"6px\", \"8px\", \"10px\", \"12px\", \"16px\", \"24px\", \"32px\", \"48px\"]),\n    \n    hasOutline: PropTypes.bool,\n    flexWrap: PropTypes.oneOf([\"nowrap\", \"wrap\", \"wrap-reverse\"]),\n    corners: PropTypes.oneOf([\"none\", \"sm\", 'base', \"md\", \"lg\", 'xl', '2xl', \"full\"]),\n    \n    alignItems: PropTypes.oneOf([\"start\", \"center\", \"end\", \"stretch\"]),\n    justifyContent: PropTypes.oneOf([\"start\", \"center\", \"end\", \"between\"]),\n    textSize: PropTypes.oneOf([\"auto\", 'xs', \"sm\", \"base\", \"md\"]),\n    maxWidth: PropTypes.number,\n    minWidth: PropTypes.number,\n    maxHeight: PropTypes.number,\n    minHeight: PropTypes.number,\n    selfAlign: PropTypes.oneOf(['auto', 'start', 'center', 'end']),\n    display: PropTypes.bool,\n    hide_from_ai: PropTypes.bool,\n    bgImageSrc: PropTypes.string,\n    fontColor: PropTypes.oneOf(['base-0', 'base-100', 'base-200', 'primary', 'accent', 'base-900', 'base-content', 'auto', 'success-content', 'error-content', 'warning-content', 'info-content']),\n    children: PropTypes.node\n};\n\n"],"names":[],"mappings":";;;;AAAO,SAAA,cAAA,CAAA,GAAA,EAAA,EAAA,IAAA,aAAA,GAAA,SAAA,CAAA,CAAA,IAAA,KAAA,GAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,MAAA,EAAA,EAAA,MAAA,EAAA,GAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,EAAA,GAAA,GAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,EAAA,KAAA,gBAAA,IAAA,EAAA,KAAA,cAAA,KAAA,KAAA,IAAA,IAAA,EAAA,EAAA,OAAA,SAAA,CAAA,EAAA,CAAA,IAAA,EAAA,KAAA,QAAA,IAAA,EAAA,KAAA,gBAAA,EAAA,EAAA,aAAA,GAAA,KAAA,CAAA,CAAA,KAAA,GAAA,EAAA,CAAA,KAAA,CAAA,CAAA,EAAA,MAAA,IAAA,EAAA,KAAA,MAAA,IAAA,EAAA,KAAA,cAAA,EAAA,EAAA,KAAA,GAAA,EAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,IAAA,CAAA,aAAA,EAAA,GAAA,IAAA,CAAA,CAAA,CAAA,CAAA,aAAA,GAAA,SAAA,CAAA,EAAA,EAAA,CAAA,OAAA,KAAA,CAAA,EAGP;AACA;AACA;AACA;AACA;AACA;AACe,SAAS,OAAO,CAAC,KAAK,EAAE;AACvC;AACA,IAAI,MAAM;AACV,QAAQ,SAAA,GAAY,UAAU;AAC9B,QAAQ,KAAA,GAAQ,MAAM;AACtB,QAAQ,MAAA,GAAS,QAAQ;AACzB,QAAQ,QAAA,GAAW,IAAI;AACvB,QAAQ,QAAA,GAAW,IAAI;AACvB,QAAQ,UAAA,GAAa,IAAI;AACzB,QAAQ,SAAA,GAAY,IAAI;AACxB,QAAQ,UAAA,GAAa,KAAK;AAC1B,QAAQ,QAAA,GAAW,QAAQ;AAC3B,QAAQ,OAAA,GAAU,MAAM;AACxB,QAAQ,GAAA,GAAM,IAAI;AAClB,QAAQ,UAAA,GAAa,OAAO;AAC5B,QAAQ,cAAA,GAAiB,OAAO;AAChC,QAAQ,QAAA,GAAW,MAAM;AACzB,QAAQ,QAAA,GAAW,IAAI;AACvB,QAAQ,QAAA,GAAW,IAAI;AACvB,QAAQ,SAAA,GAAY,IAAI;AACxB,QAAQ,SAAA,GAAY,IAAI;AACxB,QAAQ,SAAA,GAAY,MAAM;AAC1B,QAAQ,OAAA,GAAU,IAAI;AACtB,QAAQ,UAAA,GAAa,IAAI;AACzB,QAAQ,SAAA,GAAY,MAAM;AAC1B,QAAQ,QAAQ;AAChB,QAAQ,UAAU;AAClB,QAAQ,SAAA;AACR,OAAM,GAAI,KAAK,CAAA;AACfwBAAA,GAAA,EAAA,CAAA;AACA,IAAA,MAAA,SAAA,GAAA,GAAA,GAAA,CAAA,IAAA,EAAA,UAAA,CAAA,GAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA;AACA,IAAA,MAAA,aAAA,GAAA,CAAA,EAAA,QAAA,GAAA,CAAA,IAAA,EAAA,UAAA,CAAA,QAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,EAAA,QAAA,GAAA,CAAA,IAAA,EAAA,UAAA,CAAA,QAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AACA,IAAA,MAAA,UAAA,GAAA,CAAA,KAAA,EAAA,QAAA,CAAA,CAAA,CAAA;AACA,IAAA,MAAA,gBAAA,GAAA,UAAA,GAAA,CAAA,MAAA,EAAA,UAAA,CAAA,CAAA,GAAA,EAAA,CAAA;AACA,IAAA,MAAA,oBAAA,GAAA,cAAA,GAAA,CAAA,QAAA,EAAA,cAAA,CAAA,CAAA,GAAA,EAAA,CAAA;AACA,IAAA,MAAA,gBAAA,GAAA,CAAA,UAAA,IAAA,MAAA,IAAA,CAAA,UAAA,IAAA,cAAA,GAAA,UAAA,IAAA,UAAA,GAAA,CAAA,WAAA,CAAA,GAAA,cAAA,CAAA,CAAA,UAAA,EAAA,gBAAA,EAAA,EAAA,IAAA,EAAA,CAAA,UAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,KAAA,EAAA,UAAA,CAAA,QAAA,EAAA;AACA,IAAA,MAAA,UAAA,GAAA,SAAA,IAAA,MAAA,GAAA,gBAAA,GAAA,CAAA,KAAA,EAAA,SAAA,CAAA,EAAA;AACA;AACA,IAAA,IAAA,OAAA,GAAA,CAAA,KAAA,EAAA,SAAA,CAAA,CAAA,EAAA,UAAA,CAAA,CAAA,EAAA,WAAA,CAAA,MAAA,EAAA,SAAA,CAAA,CAAA,EAAA,UAAA,CAAA,CAAA,EAAA,QAAA,CAAA,CAAA,EAAA,QAAA,CAAA,CAAA,EAAA,YAAA,CAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,aAAA,CAAA,CAAA,EAAA,YAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,CAAA,EAAA,oBAAA,CAAA,CAAA,EAAA,YAAA,CAAA,EAAA;AACA;AACA,IAAA,MAAA,YAAA,GAAA;AACA,QAAA,UAAA,EAAA,UAAA,IAAA,CAAA,6DAAA,EAAA,UAAA,CAAA,iCAAA,CAAA;AACA,QAAA,eAAA,EAAA,SAAA,GAAA,CAAA,yBAAA,EAAA,UAAA,CAAA,EAAA,EAAA,SAAA,CAAA,eAAA,CAAA,GAAA,IAAA;AACA,QAAA,QAAA,EAAA,QAAA;AACA,QAAA,QAAA,EAAA,QAAA;AACA,QAAA,SAAA,EAAA,SAAA;AACA,QAAA,SAAA,EAAA,SAAA;AACA,KAAA,CAAA;AACA;AACA,IAAA,MAAA,oBAAA,GAAA,MAAA,CAAA,WAAA;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,EAAA,KAAA,CAAA,KAAA,KAAA,IAAA,IAAA,CAAA;AACA,KAAA,CAAA;AACA;AACA,IAAA,IAAA,OAAA,EAAA;AACA,QAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACA,QAAA,GAAA,UAAA,EAAA,GAAA,SAAA;AACA,QAAA,SAAA,EAAA,OAAA;AACA,QAAA,KAAA,EAAA,MAAA,CAAA,IAAA,CAAA,oBAAA,CAAA,CAAA,MAAA,GAAA,CAAA,GAAA,oBAAA,GAAA,SAAA,EAAA;AACA,UAAA,QAAA;AACA,SAAA;AACA,MAAA;AACA,CAAA;AACA;AACA;AACA,OAAA,CAAA,SAAA,GAAA;AACA,IAAA,UAAA,EAAA,SAAA,CAAA,SAAA,CAAA;AACA,QAAA,SAAA,CAAA,KAAA,CAAA,CAAA,QAAA,EAAA,SAAA,EAAA,UAAA,EAAA,UAAA,EAAA,SAAA,EAAA,QAAA,EAAA,UAAA,EAAA,CAAA;AACA,QAAA,SAAA,CAAA,MAAA,CAAA,CAAA;AACA,IAAA,SAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,CAAA,CAAA;AACA,IAAA,SAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,UAAA,EAAA,UAAA,CAAA,CAAA;AACA,IAAA,KAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,MAAA,EAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,CAAA,CAAA;AACA,IAAA,MAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,QAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,ecAAA,CAAA,CAAA;AACA,IAAA,OAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA,MAAA,CAAA,CAAA;AACA;AACA,IAAA,UAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,OAAA,EAAA,QAAA,EAAA,KAAA,EAAA,SAAA,CAAA,CAAA;AACA,IAAA,cAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,OAAA,EAAA,QAAA,EAAA,KAAA,EAAA,SAAA,CAAA,CAAA;AACA,IAAA,QAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,MAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,CAAA,CAAA;AACA,IAAA,QAAA,EAAA,SAAA,CAAA,MAAA;AACA,IAAA,QAAA,EAAA,SAAA,CAAA,MAAA;AACA,IAAA,SAAA,EAAA,SAAA,CAAA,MAAA;AACA,IAAA,SAAA,EAAA,SAAA,CAAA,MAAA;AACA,IAAA,SAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,KAAA,CAAA,CAAA;AACA,IAAA,OAAA,EAAA,SAAA,CAAA,IAAA;AACA,IAAA,YAAA,EAAA,SAAA,CAAA,IAAA;AACA,IAAA,UAAA,EAAA,SAAA,CAAA,MAAA;AACA,IAAA,SAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,QAAA,EAAA,UAAA,EAAA,UAAA,EAAA,SAAA,EAAA,QAAA,EAAA,UAAA,EAAA,cAAA,EAAA,MAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,cAAA,CAAA,CAAA;AACA,IAAA,QAAA,EAAA,SAAA,CAAA,IAAA;AACA,CAAA;;;;"}