{"version":3,"file":"FolderCard.js","sources":["../../src/react/FolderCard.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from './index'\nimport { iconMap } from './iconMap'\nimport { useMemo } from 'react';\n\nconst allIconNames = Object.keys(iconMap) || []\n\nexport default function FolderCard(props) {\n\n    const {\n        description = \"Folder â€¢ 4 files\",\n        thumbnailAspectRatio = '2 / 1',\n        textSize = 'small',\n        thumbnailImageSrc = null,\n        title = \"Folder Name\",\n        icon = 'Folder',\n        corners = \"none\",\n        width = '200px',\n        defaultIconSet,\n        attributes,\n        listeners\n      } = props;\n      \n\n    const sizeStyles = `w-full h-auto ${textSize == 'small' ? 'text-sm' : 'text-base'}`\n    let wrapperClasses = `flex flex-col items-stretch justify-start gap-3 ${sizeStyles}`\n\n    const contentClasses = `flex flex-col flex-grow`\n    const truncateStyle = { overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap'}\n\n    const noImage = !thumbnailImageSrc;\n    const imageStyles = useMemo(() => ({\n        background: !noImage && `linear-gradient(rgba(0, 0, 0, 0.04), rgba(0, 0, 0, 0.12)), url(${thumbnailImageSrc}) no-repeat center center / cover`, \n        backgroundSize: 'cover', \n        backgroundColor: `color-mix(in srgb, var(--primary) 20%, transparent)`, \n        aspectRatio: thumbnailAspectRatio\n    }), [thumbnailImageSrc, noImage, thumbnailAspectRatio]);\n\n    const cornerStyles = corners === 'none' ? '' : `rounded-${corners}`;\n    const titleFont = textSize == 'small' ? 'text-base' : 'text-lg';\n    const smallerFont = textSize == 'small' ? 'text-xs' : 'text-sm';\n\n    const IconComponent = icon !== 'none' ? <Icon icon={icon?.toLowerCase()} defaultIconSet={defaultIconSet} className='flex-shrink-0' /> : null;\n\n    return (\n        <div \n        {...attributes} {...listeners} \n        className={wrapperClasses} style={{maxWidth: width}}\n        >\n        {/* THUMBNAIL */}\n        <div className={`relative group w-full aspect-square flex items-center justify-center ${cornerStyles}`} style={imageStyles}>\n            {noImage && <Icon icon={'folder'} defaultIconSet={defaultIconSet} className='flex-shrink-0' />}\n        </div>\n        \n        {/* CONTENT BLOCK */}\n        <div className={contentClasses}>\n            \n            {/* Title */}\n            <div className={`flex flex-row justify-between gap-2 items-start ${titleFont} group `}>\n                {IconComponent}\n                <div className='flex-grow flex flex-col gap-1' style={truncateStyle}>\n                    <h3 className={`font-semibold`}>\n{title}\n                    </h3>\n                    {description && <span className={`${smallerFont} opacity-70`} style={truncateStyle}>\n{description}\n                    </span>}\n                </div>\n                <Icon icon='star' className='flex-shrink-0 transition-all cursor-pointer opacity-0 group-hover:opacity-100 scale-75' />\n            </div>\n        </div>\n        </div>\n    );\n}\n\n\nFolderCard.propTypes = {\n    thumbnailAspectRatio: PropTypes.oneOf(['2 / 1', '3 / 1', '4 / 1', '1 / 1', '3 / 2', '4 / 3']),\n    thumbnailImageSrc: PropTypes.string,\n    width: PropTypes.oneOf(['100%', '200px', '320px']),\n    textSize: PropTypes.oneOf(['small', 'medium']),\n    title: PropTypes.string.isRequired,\n    icon: PropTypes.oneOf(['none', ...allIconNames]),\n    description: PropTypes.string,\n    corners: PropTypes.oneOf([\"none\", \"sm\", \"md\", \"lg\", 'xl']),\n    children: PropTypes.node\n};\n\n"],"names":[],"mappings":"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"}