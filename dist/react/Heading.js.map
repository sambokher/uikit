{"version":3,"file":"Heading.js","sources":["../../src/react/Heading.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types';\nimport { spacingMap } from './helpers.js';\n\nexport default function Heading(props) {\n\n    const {\n        textSize = '2xl',\n        textColor = 'none',\n        marginBottom = null, \n        marginTop = null, \n        lineHeight = 'auto',\n        text = 'Heading',\n        fontWeight = 'semibold',\n        textAlign = 'left',\n        alignSelf = 'auto',\n        attributes,\n        listeners\n      } = props;\n    \n    const textSizeStyles = `text-${textSize}`;\n    const textColorStyles = textColor != 'none' ? `text-${textColor}` : '';\n    \n    const marginBottomStyles = marginBottom ? `mb-${spacingMap[marginBottom]}` : '';\n    const marginTopStyles = marginTop ? `mt-${spacingMap[marginTop]}` : '';\n    \n    const lineHeightStyles = lineHeight != 'auto' ? `leading-${lineHeight}` : '';\n    const fontWeightStyles = `font-${fontWeight}`\n    const textAlignStyles = textAlign != 'auto' ? `text-${textAlign}` : '';\n    const alignSelfStyles = alignSelf != 'auto' ? `self-${alignSelf}` : '';\n\n    let classes = `text-ellipsis ${textSizeStyles} ${textColorStyles} ${marginBottomStyles} ${marginTopStyles} ${lineHeightStyles} ${fontWeightStyles} ${textAlignStyles} ${alignSelfStyles}`\n\n    return (\n        <h1 \n        {...attributes} {...listeners} \n        style={{whiteSpace: 'pre-wrap'}} className={classes}\n        >\n        {\n        text}\n        </h1>\n    );\n}\n\nHeading.propTypes = {\n    textColor: PropTypes.oneOfType([\n        PropTypes.oneOf(['none', 'primary', 'primary-content', 'accent', 'accent-content', 'base-content', 'info-content', 'base-500', 'base-700', 'base-900']),\n        PropTypes.string]),\n    text: PropTypes.string,\n    textSize: PropTypes.oneOf(['xs', 'sm', 'base', 'lg', 'xl', '2xl', '3xl', '4xl', '5xl']),\n    marginTop: PropTypes.oneOf(['4px', '6px', '8px', '12px', '16px', '24px', '32px']),\n    marginBottom: PropTypes.oneOf(['4px', '6px', '8px', '12px', '16px', '24px', '32px']),\n    lineHeight: PropTypes.oneOf(['auto', 'none', 'tight', 'normal', 'relaxed', 'loose']),\n    fontWeight: PropTypes.oneOf(['light', 'normal', 'medium', 'semibold', 'bold', 'extrabold', 'black']),\n    textAlign: PropTypes.oneOf(['auto', 'left', 'right', 'center', 'justify']),\n    alignSelf: PropTypes.oneOf(['auto', 'start', 'end', 'center', 'stretch']),\n    children: PropTypes.node\n};\n\n"],"names":[],"mappings":"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"}