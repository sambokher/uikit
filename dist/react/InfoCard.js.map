{"version":3,"file":"InfoCard.js","sources":["../../src/react/InfoCard.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { iconMap } from './iconMap'\nimport { Button, Icon } from './index'\nimport { useMemo } from 'react';\n\nconst allIconNames = Object.keys(iconMap) || []\n\nexport default function InfoCard(props) {\n\n    const {\n        title = \"Card Title\",\n        width = '100%',\n        imageSrc = null,\n        imageAspectRatio = '2 / 1',\n        textSize = 'small',\n        icon = 'calendar',\n        secondaryText = \"Jun 2, 2023\",\n        description = \"Short description that should be about 80-100 characters long.\",\n        primaryAction = null,\n        secondaryAction = null,\n        corners = 'md',\n        attributes,\n        listeners\n      } = props;\n\n    const sizeStyles = `w-full h-auto ${textSize == 'small' ? 'text-sm' : 'text-base'}`\n    const truncateStyle = { overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap'}\n\n    let wrapperClasses = `flex flex-col items-stretch justify-start gap-3 ${sizeStyles}`\n\n    const IconComponent = icon !== 'none' ? <Icon icon={icon?.toLowerCase()}  className='flex-shrink-0' /> : null;\n\n    const noImage = !imageSrc;\n    const imageStyles = useMemo(() => ({\n        background: !noImage && `linear-gradient(rgba(0, 0, 0, 0.04), rgba(0, 0, 0, 0.12)), url(${imageSrc}) no-repeat center center / cover`, \n        backgroundSize: 'cover', \n        backgroundColor: `color-mix(in srgb, var(--base-content) 20%, transparent)`, \n        aspectRatio: imageAspectRatio\n    }), [imageSrc, noImage, imageAspectRatio]);\n\n    const cornerStyles = corners === 'none' ? '' : `rounded-${corners}`;\n    const titleFont = textSize == 'small' ? 'text-base' : 'text-lg';\n    const smallerFont = textSize == 'small' ? 'text-xs' : 'text-sm';\n\n    return (\n        <div \n        {...attributes} {...listeners} \n        className={wrapperClasses} style={{maxWidth: width}}\n        >\n\n        {/* IMAGE / THUMBNAIL */}\n        <div className={`relative w-full aspect-square flex items-center justify-center ${cornerStyles}`} style={imageStyles}>\n            {noImage && <Icon icon='image' />}\n        </div>\n        \n        {/* Content Block */}\n        <div style={truncateStyle} className={`flex flex-col flex-grow`}>\n            \n            {/* Title */}\n            <div className={`mb-sm flex flex-col justify-between gap-2 items-start ${titleFont}`}>\n                <h3 className={`font-semibold`} style={truncateStyle}>\n{title}\n                </h3>\n                \n                {(secondaryText || icon) && \n                <div className={`flex-shrink-0 flex flex-row items-center gap-1.5 ${smallerFont}`}>\n                    {IconComponent}\n{secondaryText}\n                </div>}\n            </div>\n\n            {/* Card Description */}\n            {description && \n            <div className={`${smallerFont} font-normal`} style={{minHeight: '2rem'}}>\n{description}\n            </div>}\n        </div>\n\n        {/* Actions */}\n        {(primaryAction || secondaryAction) && \n        <div className={`flex flex-row items-center flex-grow-0 flex-shrink-0 justify-start text-base gap-2 pointer-events-none`}>\n            {primaryAction && <Button size='small' type='primary' text={primaryAction} onClick={()=>{}} marginTop={'sm'}/>} \n            {secondaryAction && <Button size='small' type='secondary' text={secondaryAction} onClick={()=>{}} marginTop={'sm'}/>} \n        </div>}\n        </div>\n    );\n}\n\n\nInfoCard.propTypes = {\n    width: PropTypes.oneOf(['100%', '200px', '320px']),\n    imageSrc: PropTypes.string,\n    imageAspectRatio: PropTypes.oneOf(['2 / 1', '1 / 1', '3 / 2', '4 / 3']),\n    textSize: PropTypes.oneOf(['small', 'medium']),\n    title: PropTypes.string.isRequired,\n    icon: PropTypes.oneOf(['none', ...allIconNames]),\n    secondaryText: PropTypes.string,\n    description: PropTypes.string,\n    primaryAction: PropTypes.string,\n    secondaryAction: PropTypes.string,\n    corners: PropTypes.oneOf([\"none\", \"sm\", \"md\", \"lg\", 'xl']),\n    \n};\n"],"names":[],"mappings":"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"}