{"version":3,"file":"InputPIN.js","sources":["../../src/react/InputPIN.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useState, useRef, useEffect } from 'react';\n\nexport default function InputPIN(props) {\n    const {\n        length = 4, \n        state = 'default',\n        bgColor = 'base-0',\n        size = 'medium',\n        width = 'auto',\n        hasOutline = true,\n        onComplete = () => {},\n        onChange = () => {}, \n        attributes,\n        listeners\n    } = props;\n\n\n    const [code, setCode] = useState([...Array(length)].map(() => \"\"));\n    useEffect(() => {\n        setCode([...Array(length)].map(() => \"\"));\n    }, [length]);\n\n    const inputs = useRef([]);\n\n    const handleFocus = (slot) => {\n        inputs.current[slot].focus();\n    };\n\n    const processInput = (e, slot) => {\n        const num = e.target.value;\n        if (/[^0-9]/.test(num)) return; // Only allow digits\n        const newCode = [...code];\n        newCode[slot] = num;\n        setCode(newCode);\n\n        if (slot !== length - 1 && num !== \"\") {\n            handleFocus(slot + 1);\n        }\n\n        if (newCode.every(num => num !== \"\")) {\n            onComplete(newCode.join(\"\"));\n        }\n\n        onChange(newCode.join(\"\")); // Trigger onChange with the full PIN code\n    };\n\n    const onKeyUp = (e, slot) => {\n        if (e.key === \"Backspace\" && !code[slot] && slot !== 0) {\n            handleFocus(slot - 1);\n        }\n    };\n\n    const sizeStyles = size === 'small' ? `text-xs w-5 py-1` : size === 'large' ? `text-base w-8 py-2` : `text-sm w-7 py-1.5`;\n    const cornerStyles = size === \"small\" ? \"rounded\" : size === \"large\" ? \"rounded-lg\" : \"rounded-md\";\n    const gapStyles = size == 'small' ? 'gap-2' : size == 'large' ? 'gap-4' : 'gap-3'\n    \n    let stateStyles = hasOutline ? `ring-1 ring-inset ring-base-300` : 'ring-1 ring-inset ring-transparent';\n    if (state === 'disabled') {\n        stateStyles = `bg-base-100 opacity-70 cursor-not-allowed ${hasOutline ? 'ring-1 ring-inset ring-base-300' : ''}`;\n    } else if (state === 'error') {\n        stateStyles = `text-warning-content ${hasOutline ? 'ring-1 ring-inset ring-warning-content' : ''}`;\n    } else if (state === 'success') {\n        stateStyles = `text-success-content ${hasOutline ? 'ring-1 ring-inset ring-success-content' : ''}`;\n    }\n\n    const bgStyles = (bgColor && bgColor !== 'none') ? `bg-${bgColor}` : '';\n\n    const widthStyle = width !== 'auto' ? `w-${width}` : 'w-auto';\n    \n    let wrapperClasses = `flex flex-row items-center justify-evenly ${widthStyle} ${gapStyles} border border-transparent`;\n\n    return (\n        <div\n        {...attributes} {...listeners}  \n        className={wrapperClasses}\n        >\n                {code.map((num, idx) => (\n                    <input\n                        key={idx}\n                        type=\"text\"\n                        inputMode=\"numeric\"\n                        maxLength={1}\n                        value={num}\ndisabled={state === 'disabled'}\n                        className={`\n                            ${sizeStyles} ${cornerStyles} ${bgStyles} ${stateStyles}\n                             text-center focus:ring-2 focus:ring-accent \n                            ${state === 'disabled' && 'cursor-not-allowed'}`}\nonChange={(e) => processInput(e, idx)}\n                        /* replace to  'onKeyUp={(e) => onKeyUp(e, idx)}' */\nref={(ref) => inputs.current[idx] = ref}\n                        \n                    />\n                ))}\n            \n        </div>\n    );\n}\n\nInputPIN.propTypes = {\n    length: PropTypes.number,\n    state: PropTypes.oneOf(['default', 'disabled', 'error', 'success']),\n    bgColor: PropTypes.oneOf(['none', 'base-0', 'base-50', 'base-100']),\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\n    hasOutline: PropTypes.bool,\n    name: PropTypes.string,\n    onComplete: PropTypes.func, // Callback when PIN is fully entered\n    onChange: PropTypes.func, // Callback on every change\n};\n\n"],"names":[],"mappings":"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"}