{"version":3,"file":"KebabMenu.js","sources":["../../src/react/KebabMenu.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types'\nimport { useState, useEffect } from 'react'; \nimport * as IconoirIcons from 'iconoir-react';\nimport { spacingMap } from './helpers.js';\n\nexport default function KebabMenu(props) {\n    \n    const {\n        bgColor = 'base-0',\n\n        padding = null,\n        gap = null,\n\n        icon = 'MoreHoriz',\n        buttonBgColor = null,\n        buttonOutline = true,\n        size = '20px',\n        showMenu = false,\n        menuMinWidth = '120px',\n        corners = 'md',\n        openDirection = 'downward-right',\n        children,\n        attributes,\n        listeners\n      } = props;\n    \n    const [ open, setOpen ] = useState(showMenu)\n    useEffect(() => {\n        setOpen(showMenu);\n    }, [showMenu]);\n\n    /* Kebab Button */\n    const iconColor = !buttonBgColor ? '' : parseInt(buttonBgColor.replace('base-', ''), 10) > 301 ? 'text-base-0' : 'text-base-content'\n    const borderStyles = buttonOutline ? 'border border-base-300' : ''\n    const menuPositionStyle = getMenuPositionStyle(openDirection)\n    let wrapperClasses = `relative flex-shrink-0 flex items-center justify-center`\n    \n    /* Icon */\n    const iconSize = parseInt(size.replace('px', ''), 10) - 4\n    const IconComponent = IconoirIcons[icon] || IconoirIcons['MoreHoriz'];\n    \n\n    /* Drop Area */\n    const gapStyles = gap ? `gap-${spacingMap[gap]}` : '';\n    const paddingStyles = padding ? `gap-${spacingMap[padding]}` : '';\n    const cornerStyles = corners === 'none' ? '' : `rounded-${corners}`;\n    const borderClasses = `border border-base-300` \n    let optionsClasses = `w-auto flex flex-col items-start justify-start mt-2 bg-${bgColor} z-5 absolute ${borderClasses} ${gapStyles} ${paddingStyles} ${cornerStyles} `\n    \n    function getMenuPositionStyle(direction) {\n        switch (direction) {\n            case 'upward-right':\n                return { bottom: '100%', left: 0 };\n            case 'upward-left':\n                return { bottom: '100%', right: 0 };\n            case 'downward-left':\n                return { top: '100%', right: 0 };\n            default: // 'downward-right'\n                return { top: '100%', left: 0 };\n        }\n    }\n\n    \n    return (\n        <div \n        {...attributes} {...listeners} \n        className={wrapperClasses}\n        onClick={() => setOpen(!open) }\n    >\n        <div className={`p-[2px] rounded bg-${buttonBgColor} hover:brightness-95 transition-all ${borderStyles}`}>\n        {IconComponent && <IconComponent \n            style={{height: iconSize, width: iconSize, strokeWidth: parseInt(size.replace('px', ''), 10) > 20 ? 2 : 1}} \n            className={`flex-shrink-0 flex-grow-0 ${iconColor}`}\n            />}</div>\n        \n        {open && (<div \n                    style={{ \n                        ...menuPositionStyle,\n                        position: 'absolute', \n                        zIndex: 5000, \n                        minWidth: menuMinWidth\n                    }}\n                    className={optionsClasses}\n                    >\n                        {children}\n        </div>)}\n    </div>\n);  \n}\n\n\nKebabMenu.propTypes = {\n    icon: PropTypes.oneOf(['MoreHoriz', 'MoreVert', 'MoreHorizCircle', 'MoreVertCircle', 'NavArrowDown', 'Plus', 'PlusCircle']),\n    buttonBgColor: PropTypes.oneOf(['base-0', 'base-100']),\n    buttonOutline: PropTypes.bool,\n    size: PropTypes.oneOf(['16px', '20px', '24px', '32px']),\n    showMenu: PropTypes.bool,\n    menuMinWidth: PropTypes.oneOf(['fitContent', '120px', '160px', '240px', '320px']),\n    padding: PropTypes.oneOf(['8x', '12px', '16px']),\n    bgColor: PropTypes.oneOf(['base-0', 'base-100']),\n    corners: PropTypes.oneOf(['none', 'sm', 'md', 'lg']),\n    gap: PropTypes.oneOf(['4px', '6px', '8x', '12px', '16px']),\n    openDirection: PropTypes.oneOf(['downward-right', 'downward-left', 'upward-right', 'upward-left']),\n};\n\n"],"names":[],"mappings":"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"}