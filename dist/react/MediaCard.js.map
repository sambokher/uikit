{"version":3,"file":"MediaCard.js","sources":["../../src/react/MediaCard.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from './index'\nimport { useMemo } from 'react';\n\nexport default function MediaCard(props) {\n\n    const {\n        imageSrc = null,\n        imageAspectRatio = '2 / 1',\n        textSize = 'small',\n        title = \"Title\",\n        description = \"Short description of media\",\n        type = \"oneMedia\",\n        corners = \"md\",\n        width = '100%',\n        defaultIconSet,\n        attributes,\n        listeners\n      } = props;\n\n    // Determine background styles\n    const sizeStyles = `w-full h-auto ${textSize == 'small' ? 'text-sm' : 'text-base'}`\n    const truncateStyle = { overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap'}\n\n    let wrapperClasses = `flex flex-col items-stretch justify-start gap-3 ${sizeStyles}`\n\n    const noImage = !imageSrc;\n    \n    const imageStyles = useMemo(() => ({\n        background: !noImage && `linear-gradient(rgba(0, 0, 0, 0.04), rgba(0, 0, 0, 0.12)), url(${imageSrc}) no-repeat center center / cover`,\n        backgroundSize: 'cover',\n        backgroundColor: `color-mix(in srgb, var(--base-content) 20%, transparent)`,\n        aspectRatio: imageAspectRatio\n    }), [imageSrc, noImage, imageAspectRatio]);\n\n    const cornerStyles = corners === 'none' ? '' : `rounded-${corners}`;\n    const titleFont = textSize == 'small' ? 'text-base' : 'text-lg';\n    const smallerFont = textSize == 'small' ? 'text-xs' : 'text-sm';\n    \n    const dotStyle = `w-[6px] h-[6px] rounded-full`\n    \n    return (\n        <div \n        {...attributes} {...listeners} \n        className={wrapperClasses} style={{maxWidth: width}}>\n        \n        {/* THUMBNAIL */}\n        <div className={`group relative w-full flex items-center justify-center ${cornerStyles}`} style={imageStyles}>\n            \n            {type == 'mediaGallery' && <>\n            {/* ARROWS */}\n            <div className='absolute top-1/2 -translate-y-1/2 left-0 text-base-0 w-full px-sm justify-between items-center flex flex-row gap-2'>\n                    <div style={{backgroundColor: `color-mix(in srgb, var(--base-0) 20%, transparent)`}} className={`rounded-full p-1 transition-all cursor-pointer hover:scale-110 opacity-0 group-hover:opacity-100`}><Icon icon='chevron-left'  /></div>\n                    <div style={{backgroundColor: `color-mix(in srgb, var(--base-0) 20%, transparent)`}} className={`rounded-full p-1 transition-all cursor-pointer hover:scale-110 opacity-0 group-hover:opacity-100`}><Icon icon='chevron-right'  /></div>\n            </div>\n\n            {/* DOTS */}\n            <div className='absolute bottom-2 -translate-x-1/2 left-1/2 flex flex-row gap-1 cursor-pointer'>\n                <div className={dotStyle} style={{backgroundColor: `color-mix(in srgb, var(--base-0) 40%, transparent)`}}/>\n                <div className={dotStyle} style={{backgroundColor: `color-mix(in srgb, var(--base-0) 40%, transparent)`}}/>\n                <div className={dotStyle} style={{backgroundColor: `color-mix(in srgb, var(--base-0) 80%, transparent)`}}/>\n                <div className={dotStyle} style={{backgroundColor: `color-mix(in srgb, var(--base-0) 40%, transparent)`}}/>\n            </div>\n            </>}\n            {noImage && <Icon icon={'image'} defaultIconSet={defaultIconSet} className='flex-shrink-0' />}\n        </div>\n        \n        {/* CONTENT BLOCK */}\n        {(title || description) &&\n        <div className='flex flex-row gap-2 justify-between items-start group relative'>\n            {/* TITLE & DESCRIPTION */}\n            <div className='flex-grow flex flex-col gap-1.5' style={truncateStyle}>\n                <h3 className={`${titleFont} font-semibold`}>\n{title}\n                </h3>\n                {description && <span className={`${smallerFont} truncate overflow-ellipsis`} style={truncateStyle}>\n{description}\n                </span>}\n            </div>\n            {/* ICON */}\n            <div className={`rounded transition-all cursor-pointer hover:scale-110 opacity-0 group-hover:opacity-100`}>\n                <Icon icon='heart' />\n            </div>    \n        </div>}\n        \n        </div>\n    );\n}\n\n\nMediaCard.propTypes = {\n    imageSrc: PropTypes.string,\n    imageAspectRatio: PropTypes.oneOf(['2 / 1', '1 / 1', '3 / 2', '4 / 3']),\n    textSize: PropTypes.oneOf(['small', 'medium']),\n    title: PropTypes.string.isRequired,\n    icon: PropTypes.oneOf(['none', 'Star', 'MoreVert', 'MoreHoriz', 'Link']),\n    description: PropTypes.string,\n    type: PropTypes.oneOf(['mediaGallery', 'oneMedia']),\n    corners: PropTypes.oneOf([\"none\", \"sm\", \"md\", \"lg\", 'xl']),\n    width: PropTypes.oneOf(['100%', '200px', '320px', '400px']),\n    \n};\n\n"],"names":[],"mappings":"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"}