{"version":3,"file":"MiniCalendar.js","sources":["../../src/react/MiniCalendar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types'\nimport * as IconoirIcons from 'iconoir-react';\nimport { format, startOfMonth, endOfMonth, startOfWeek, endOfWeek, addDays, isSameDay, addMonths, subMonths, isToday, isSameMonth } from 'date-fns';\n// run 'npm install date-fns' to install date-fns\n\nexport default function MiniCalendar(props) {\n\n    const {\n        bgColor = 'base-50',\n        selectColor = 'accent',\n        corners = 'sm',\n        weekStart = 'Monday',\n        hasOutline = false,\n        attributes,\n        listeners\n      } = props;\n    \n    const cornerStyles = corners == 'none' ? '' : 'rounded-'+corners\n    const outlineColor = (bgColor === 'base-50' || bgColor == 'base-0') ? 'base-100' : bgColor == 'base-100' ? 'base-200' : 'base-300'\n    const outlineStyles = hasOutline ? 'ring-[0.5px] ring-inset ring-'+outlineColor : ''\n    let wrapperClasses = `flex w-full max-w-[240px] p-sm flex-col items-stretch relative text-sm select-none bg-${bgColor} ${cornerStyles} ${outlineStyles}`\n\n    const weekdayStyle = `flex-grow-1 w-full text-center font-normal pt-2xs text-gray-500`\n    const days = weekStart === 'Sunday' ? ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'] : ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'];\n\n    const [currentMonth, setCurrentMonth] = useState(new Date()); // YOU CAN CHANGE THIS TO A PROP\n    const [selectedDate, setSelectedDate] = useState(new Date()); \n\n    return (\n        <div\n        {...attributes} {...listeners} \n            className={wrapperClasses}\n        >\n            {/* Month Row */}\n            <div className='flex flex-row justify-between items-center w-full p-1'>\n                <IconoirIcons.NavArrowLeft \n                    className='transition-all hover:scale-110 cursor-pointer'\nonClick={() => setCurrentMonth(subMonths(currentMonth, 1))}\n                />\n                {format(currentMonth, 'MMMM yyyy')}\n                <IconoirIcons.NavArrowRight \n                    className='transition-all hover:scale-110 cursor-pointer'\nonClick={() => setCurrentMonth(addMonths(currentMonth, 1))}\n                />\n            </div>\n\n            {/* Weekdays Row */}\n                <ul className='flex flex-row gap-1 w-full p-1 font-normal'>\n                    {days.map((day, index) => (\n                        <li key={index} className={weekdayStyle}>{day}</li>\n                    ))}\n                </ul>\n            \n            {/* Days Grid */}\n            <div className='flex flex-col gap-1 w-full font-medium'>\n                <DaysGrid \n                    currentMonth={currentMonth}  \n                    selectedDate={selectedDate} \n                    selectColor={selectColor}\n                    weekStart={weekStart}\n                    setSelectedDate={setSelectedDate} \n                    cornerStyles={cornerStyles} />\n            </div>\n        </div>\n    );\n}\n\nfunction DaysGrid({ currentMonth, selectedDate, setSelectedDate, selectColor, cornerStyles, weekStart = 'Monday' }) {\n    const weekStartOptions = weekStart === 'Sunday' ? { weekStartsOn: 0 } : { weekStartsOn: 1 };\n\n    const monthStart = startOfMonth(currentMonth);\n    const monthEnd = endOfMonth(monthStart);\n    const startDate = startOfWeek(monthStart, weekStartOptions);\n    let endDate = endOfWeek(monthEnd, weekStartOptions);\n\n    const nextMonthStart = addDays(monthEnd, 1);\n\n    const weeks = [];\n    let days = [];\n    let day = startDate;\n    let formattedDate = '';\n\n    while (day <= endDate || weeks.length < 6) {\n        let isCurrentWeek = false;\n        for (let i = 0; i < 7; i++) {\n            formattedDate = format(day, 'd');\n            const isInCurrentMonth = isSameMonth(day, monthStart);\n            const isSelected = isSameDay(day, selectedDate);\n            const isCurrentDay = isToday(day);\n            \n            if (isCurrentDay) { isCurrentWeek = true }\n\n            const dayClasses = `aspect-square h-8 w-8 ${cornerStyles} flex items-center justify-center ${isSelected ? 'text-base-0' : !isInCurrentMonth ? 'text-base-400' : 'text-base-content'}`;\n            const currentDay = day;\n\n            days.push(\n                <div style={{ width: '14.28%' }} key={currentDay.toISOString()}>\n                    <span className={`${dayClasses}`}\nonClick={(e) => { e.stopPropagation(); setSelectedDate(currentDay); }}\n                        style={{\n                            backgroundColor:\n                                isSelected ? `var(--${selectColor})` :\n                                isCurrentDay ? 'color-mix(in srgb, var(--base-content) 12%, transparent)' : 'transparent',\n                        }}\n                    >\n                        {formattedDate}\n                    </span>\n                </div>\n            );\n            day = addDays(day, 1);\n        }\n        weeks.push(\n            <div\n                className={`flex w-full gap-0 rounded`}\n                style={{backgroundColor: isCurrentWeek ? 'color-mix(in srgb, var(--base-content) 8%, transparent)' : 'transparent'}}\n                key={day.getTime()}\n            >\n                {days}\n            </div>\n        );\n        days = [];\n    }\n\n    /* CONDITIONAL extra week to ensure calendar has consistent height */\n    if (weeks.length < 6) {\n        let extraDays = [];\n        let nextDay = nextMonthStart;\n        for (let i = 0; i < 7; i++) {\n            formattedDate = format(nextDay, 'd');\n            const isSelected = isSameDay(nextDay, selectedDate);\n            const isCurrentDay = isToday(nextDay);\n\n            const dayClasses = `aspect-square h-8 w-8 rounded-full flex items-center justify-center ${isSelected ? 'text-base-content' : 'text-base-300'}`;\n\n            extraDays.push(\n                <div style={{ width: '14.28%' }} key={nextDay.toISOString()}>\n                    <span className={`${dayClasses}`}\nonClick={(e) => { e.stopPropagation(); setSelectedDate(nextDay); }}\n                        style={{\n                            backgroundColor: isSelected ? `var(--${selectColor})` : isCurrentDay ? 'color-mix(in srgb, var(--base-content) 12%, transparent)' : 'transparent',\n                            color: isSelected ? 'white' : 'var(--base-content)'\n                        }}>\n                        {formattedDate}\n                    </span>\n                </div>\n            );\n            nextDay = addDays(nextDay, 1);\n        }\n        weeks.push(\n            <div className=\"flex w-full gap-0\" key={nextDay.getTime()}>\n                {extraDays}\n            </div>\n        );\n    }\n\n    return <div className=\"w-full\">{weeks}</div>;\n}\n\nMiniCalendar.propTypes = {\n    bgColor: PropTypes.oneOf(['base-0', 'base-50', 'base-100', 'base-200']),\n    selectColor: PropTypes.oneOf(['accent', 'primary', 'base-content']),\n    corners: PropTypes.oneOf(['none', 'sm', 'base', 'md', 'lg']),\n    weekStart: PropTypes.oneOf(['Monday', 'Sunday']),\n    hasOutline: PropTypes.bool,\n};\n\n"],"names":[],"mappings":"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"}