{"version":3,"file":"MiniCardHorizontal.js","sources":["../../src/react/MiniCardHorizontal.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from './index'\nimport { iconMap } from './iconMap'\nimport { useMemo } from 'react';\n\nconst allIconNames = Object.keys(iconMap) || []\n\nexport default function MiniCardHorizontal(props) {\n\n    const {\n        description = \"Short description ~50 chars long.\",\n        textSize = 'small',\n        imageSize = '80px',\n        title = \"Card Title\",\n        imageSrc = null,\n        secondaryText = \"Jun 2, 2023\",\n        icon = 'calendar',\n        corners = 'md',\n        defaultIconSet,\n        attributes,\n        listeners\n      } = props;\n\n    const sizeStyles = `w-full h-auto ${textSize == 'small' ? 'text-sm' : 'text-base'}`\n    const truncateStyle = { overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap'}\n\n    let wrapperClasses = `flex flex-row items-stretch justify-start gap-3 ${sizeStyles}`\n\n    const IconComponent = icon !== 'none' ? <Icon icon={icon?.toLowerCase()} defaultIconSet={defaultIconSet} className='flex-shrink-0' /> : null;\n\n    const noImage = !imageSrc || imageSrc === '';\n    const imageStyles = useMemo(() => ({\n        background: !noImage && `linear-gradient(rgba(0, 0, 0, 0.04), rgba(0, 0, 0, 0.12)), url(${imageSrc}) no-repeat center center / cover`, \n        backgroundSize: 'cover', \n        backgroundColor: `color-mix(in srgb, var(--base-content) 20%, transparent)`, \n        minHeight: '100%', \n        minWidth: imageSize, \n        flexShrink: 0\n    }), [imageSrc, noImage, imageSize]);\n\n    const cornerStyles = corners === 'none' ? '' : `rounded-${corners}`;\n    const titleFont = textSize == 'small' ? 'text-base' : 'text-lg';\n    const smallerFont = textSize == 'small' ? 'text-xs' : 'text-sm';\n    \n    return (\n        <div \n        {...attributes} {...listeners} \n        className={wrapperClasses} \n        >\n        {/* IMAGE */}\n        {<div className={`relative flex flex-shrink-0 aspect-square h-full items-center justify-center ${cornerStyles}`} style={imageStyles}>\n            {noImage && <Icon icon={'image'} defaultIconSet={defaultIconSet} className='flex-shrink-0' />}\n        </div>}\n        \n        {/* CONTENT BLOCK */}\n        <div style={truncateStyle} className={`flex flex-col flex-grow gap-1.5 overflow-hidden`}>\n            \n            {/* Title */}\n            <div className={`flex flex-col justify-between gap-2 items-start`}>\n                <h3 className={`font-semibold ${titleFont}`} style={truncateStyle}>\n{title}\n                </h3>\n                {(secondaryText) && \n                <div className='flex-shrink-0 flex flex-row items-center gap-2 '>\n                    {IconComponent}\n{secondaryText}\n                </div>}\n            </div>\n\n            {/* Description */}\n            {description && <div className={`${smallerFont}`} style={truncateStyle}>\n{description}\n            </div>}\n        </div>\n        </div>\n    );\n}\n\nMiniCardHorizontal.propTypes = {\n    imageSrc: PropTypes.string,\n    textSize: PropTypes.oneOf(['small', 'medium']),\n    title: PropTypes.string.isRequired,\n    hasMedia: PropTypes.bool,\n    icon: PropTypes.oneOf(['none', ...allIconNames]),\n    secondaryText: PropTypes.string,\n    description: PropTypes.string,\n    corners: PropTypes.oneOf(['none', 'sm', 'md', 'lg', 'xl']),\n    imageSize: PropTypes.oneOf(['80px', '92px', '120px']),\n};\n\n"],"names":[],"mappings":"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"}