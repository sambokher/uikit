{"version":3,"file":"Pagination.js","sources":["../../src/react/Pagination.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types'\nimport { Button, ButtonIcon } from './index';\nimport { spacingMap } from './helpers.js';\n\nexport default function Pagination(props) {\n    \n    const {\n        type = 'standard',\n        textSize = 'base',\n        paddingX = null, \n        paddingY = null,\n        currentPage = 1,\n        totalPages = 3,\n        onChange = () => {},\n        attributes,\n        listeners\n      } = props;\n\n    const selectedIndex = currentPage\n    // local state to imitate page selection, move this state up to the parent and adjust local functions\n\n    const paddingStyles = `${paddingX ? `px-${spacingMap[paddingX]}` : ''} ${paddingY ? `py-${spacingMap[paddingY]}` : ''}`;    \n    const justifyStyle = type == 'mini' ? 'justify-end' : 'justify-between'\n    const textStyles = textSize != 'auto' ? `text-${textSize}` : ''\n    let wrapperClasses = `w-full flex flex-row ${justifyStyle} items-center gap-2 ${paddingStyles} ${textStyles}`\n\n    function handlePageChange(page) {\n        if (page < 1 || page > totalPages) return\n        onChange(page)\n    }\n    \n    const LeftButton =\n      type == \"standard\" ? (\n        <Button\n          text=\"Back\"\n          size=\"small\"\n          type={\"ghost\"}\n          isDisabled={selectedIndex == 1}\n          leftIcon=\"chevron-left\"\n          onClick={() => handlePageChange(selectedIndex - 1)}\n        />\n      ) : (\n        <ButtonIcon\n          icon='chevron-left'\n          size=\"small\"\n          type={\"ghost\"}\n          isDisabled={selectedIndex == 1}\n          onClick={() => handlePageChange(selectedIndex - 1)}\n        />\n      );\n\n    const RightButton =\n      type == \"standard\" ? (\n        <Button\n          text=\"Next\"\n          size=\"small\"\n          type={\"ghost\"}\n          isDisabled={selectedIndex >= totalPages}\n          rightIcon=\"chevron-right\"\n          onClick={() => handlePageChange(selectedIndex + 1)}\n        />\n      ) : (\n        <ButtonIcon\n          icon='chevron-right'\n          size=\"small\"\n          type={\"ghost\"}\n          isDisabled={selectedIndex >= totalPages}\n          onClick={() => handlePageChange(selectedIndex + 1)}\n        />\n      );\n    \n    return (\n        <div\n        {...attributes} {...listeners} \n            className={wrapperClasses} \n        >\n                        {LeftButton}\n                        {type == 'standard' ? \n                        <PaginationArray\n                            totalPages={totalPages}\n                            currentPage={selectedIndex}\n                            handlePageChange={handlePageChange}\n                        /> : \n                        <div className='flex flex-row gap-2'>\n                            {currentPage} of {totalPages}\n                        </div>}\n                        {RightButton}\n        </div>\n    );\n}\nfunction PaginationArray ({ totalPages, currentPage, handlePageChange }){\n    const createPaginationArray = (totalPages, currentPage) => {\n        let paginationArray = [];\n\n        if (totalPages <= 5) {\n            // If the total number of pages is less than or equal to 5, show all pages\n            for (let i = 1; i <= totalPages; i++) {\n                paginationArray.push(i);\n            }\n        } else {\n            \n            // needs to be refactored into a more elegant solution\n            if (currentPage < 4) {\n                paginationArray =[1, 2, 3, 4, '...', totalPages];\n            } else if (currentPage == 4) {\n                paginationArray =[1, '...', 3, 4, 5, '...', totalPages];\n            } else if (totalPages - currentPage < 3) {\n                paginationArray = [1, '...', totalPages - 3, totalPages - 2, totalPages - 1, totalPages];\n            } else if (totalPages - currentPage == 3) {\n                paginationArray = [1, '...', totalPages - 4, totalPages - 3, totalPages - 2, '...', totalPages];\n            } else {\n                paginationArray = [1, '...', currentPage - 1, currentPage, currentPage + 1, '...', totalPages];\n            }\n        }\n\n        return paginationArray;\n    };\n\n    const paginationArray = createPaginationArray(totalPages, currentPage);\n\n    return (\n        <div className='flex flex-row gap-2'>\n            {paginationArray.map((page, index) => {\n                if (page === '...') {\n                    return (\n                        <span key={`ellipsis-${index}`}>\n                            ...\n                        </span>\n                    );\n                }\n                return (\n                    <Button\n                        key={page}\n                        text={`${page}`}\n                        size=\"small\"\n                        type={currentPage === page  ? 'secondary' : 'ghost'}\n                        onClick={() => handlePageChange(page)}\n                    />\n                );\n            })}\n        </div>\n    );\n};\n\nPagination.propTypes = {\n    type: PropTypes.oneOf(['mini', 'standard']),\n    textSize: PropTypes.oneOf(['auto', 'xs', 'sm', 'base', 'md']),\n    paddingX: PropTypes.oneOf(['4px', '6px', '8px', '12px', '16px', '24px', '32px']),\n    paddingY: PropTypes.oneOf(['4px', '6px', '8px', '12px', '16px', '24px', '32px']),\n    currentPage: PropTypes.number, // starts at 1\n    totalPages: PropTypes.number,\n    onChange: PropTypes.func\n\n};\n\n"],"names":[],"mappings":"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"}