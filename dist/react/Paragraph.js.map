{"version":3,"file":"Paragraph.js","sources":["../../src/react/Paragraph.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types';\nimport { spacingMap } from './helpers.js';\n\nconst dummyText = `This medium-length paragraph provides more detail, suitable for sections that require a bit more explanation. It's perfect for content areas where you need to elaborate on a topic without overwhelming the reader with text.`\n\nexport default function Paragraph(props) {\n   \n    const {\n        text = dummyText,\n        textSize = 'auto',\n        textColor = 'auto',\n        marginBottom = null, \n        marginTop = null, \n        lineHeight = 'auto',\n        textAlign = 'left',\n        \n        fontWeight,\n        attributes,\n        listeners\n      } = props;\n\n    const textSizeStyles = textSize !== 'auto' && `text-${textSize}`\n    const textColorStyles = textColor !== 'auto' &&  `text-${textColor}`\n    const marginBottomStyles = marginBottom ? `mb-${spacingMap[marginBottom]}` : '';\n    const marginTopStyles = marginTop ? `mt-${spacingMap[marginTop]}` : '';\n    \n    const lineHeightStyles = lineHeight !== 'auto' && `leading-${lineHeight}`\n    const fontWeightStyles = fontWeight !== 'auto' && `font-${fontWeight}`\n    const textAlignStyles = textAlign ? `text-${textAlign}` : ''; \n\n    let classes = `whitespace-pre-wrap ${textSizeStyles} ${textColorStyles} ${marginBottomStyles} ${marginTopStyles} ${lineHeightStyles} ${fontWeightStyles} ${textAlignStyles}`\n\n    return (\n        <span\n        className={classes}\n        {...attributes} {...listeners} \n        >\n        { \n        text}\n        </span>\n    );\n}\nParagraph.propTypes = {\n    text: PropTypes.string,\n    textSize: PropTypes.oneOf(['auto', 'xs', 'sm', 'base', 'md', 'lg', 'xl', '2xl', '3xl', '4xl']),\n    marginTop: PropTypes.oneOf(['4px', '6px', '8px', '12px', '16px', '24px', '32px']),\n    marginBottom: PropTypes.oneOf(['4px', '6px', '8px', '12px', '16px', '24px', '32px']),\n    lineHeight: PropTypes.oneOf(['auto', 'none', 'tight', 'normal', 'relaxed', 'loose']),\n    textAlign: PropTypes.oneOf(['auto', 'left', 'right', 'center', 'justify']),\n    textColor: PropTypes.oneOfType([\n        PropTypes.oneOf(['auto', 'primary', 'primary-content', 'accent', 'accent-content', 'base-content', 'base-500', 'base-700', 'base-900', 'success-content', 'warning-content', 'error-content', 'info-content']),\n        PropTypes.string]),\n    children: PropTypes.node\n};\n\n"],"names":[],"mappings":";;;;AAIA,MAAM,SAAA,GAAY,CAAC,8NAA8N,EAAA;AACjP;AACe,SAAS,SAAS,CAAC,KAAK,EAAE;AACzC;AACA,IAAI,MAAM;AACV,QAAQ,IAAA,GAAO,SAAS;AACxB,QAAQ,QAAA,GAAW,MAAM;AACzB,QAAQ,SAAA,GAAY,MAAM;AAC1B,QAAQ,YAAA,GAAe,IAAI;AAC3B,QAAQ,SAAA,GAAY,IAAI;AACxB,QAAQ,UAAA,GAAa,MAAM;AAC3B,QAAQ,SAAA,GAAY,MAAM;AAC1B;AACA,QAAQ,UAAU;AAClB,QAAQ,UAAU;AAClB,QAAQ,SAAA;AACR,OAAM,GAAI,KAAK,CAAA;AACf;AACA,IAAI,MAAM,cAAe,GAAE,QAAS,KAAI,MAAO,IAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAA;AACnE,IAAA,MAAA,eAAA,GAAA,SAAA,KAAA,MAAA,KAAA,CAAA,KAAA,EAAA,SAAA,CAAA,EAAA;AACA,IAAA,MAAA,kBAAA,GAAA,YAAA,GAAA,CAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA;AACA,IAAA,MAAA,eAAA,GAAA,SAAA,GAAA,CAAA,GAAA,EAAA,UAAA,CAAA,SAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA;AACA;AACA,IAAA,MAAA,gBAAA,GAAA,UAAA,KAAA,MAAA,IAAA,CAAA,QAAA,EAAA,UAAA,CAAA,EAAA;AACA,IAAA,MAAA,gBAAA,GAAA,UAAA,KAAA,MAAA,IAAA,CAAA,KAAA,EAAA,UAAA,CAAA,EAAA;AACA,IAAA,MAAA,eAAA,GAAA,SAAA,GAAA,CAAA,KAAA,EAAA,SAAA,CAAA,CAAA,GAAA,EAAA,CAAA;AACA;AACA,IAAA,IAAA,OAAA,GAAA,CAAA,oBAAA,EAAA,cAAA,CAAA,CAAA,EAAA,eAAA,CAAA,CAAA,EAAA,kBAAA,CAAA,CAAA,EAAA,eAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,CAAA,EAAA,eAAA,CAAA,EAAA;AACA;AACA,IAAA;AACA,QAAA,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACA,QAAA,SAAA,EAAA,OAAA;AACA,QAAA,GAAA,UAAA,EAAA,GAAA,SAAA,EAAA;AACA;AACA;AACA,QAAA,IAAA;AACA,SAAA;AACA,MAAA;AACA,CAAA;AACA,SAAA,CAAA,SAAA,GAAA;AACA,IAAA,IAAA,EAAA,SAAA,CAAA,MAAA;AACA,IAAA,QAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,MAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,CAAA,CAAA;AACA,IAAA,SAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;AACA,IAAA,YAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;AACA,IAAA,UAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,OAAA,CAAA,CAAA;AACA,IAAA,SAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,SAAA,CAAA,CAAA;AACA,IAAA,SAAA,EAAA,SAAA,CAAA,SAAA,CAAA;AACA,QAAA,SAAA,CAAA,KAAA,CAAA,CAAA,MAAA,EAAA,SAAA,EAAA,iBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,cAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,iBAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,cAAA,CAAA,CAAA;AACA,QAAA,SAAA,CAAA,MAAA,CAAA,CAAA;AACA,IAAA,QAAA,EAAA,SAAA,CAAA,IAAA;AACA,CAAA;;;;"}