{"version":3,"file":"ProductCard.js","sources":["../../src/react/ProductCard.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from './index'\nimport { MediaImage } from 'iconoir-react';\nimport { useMemo } from 'react';\n\n\nexport default function ProductCard(props) {\n\n    const {\n        title = \"Product Name\",\n        descriptionFirstLine = \"Description line 1\",\n        descriptionSecondLine = null,\n        width = '100%',\n        corners = 'md',\n        textSize = 'small',\n        \n        price = \"$50\",\n        imageSrc = null,\n        rating = \"4.5\",\n        tag = null,\n        priceNote = \"total\",\n        attributes,\n        listeners\n      } = props;\n\n    const sizeStyles = `w-full h-auto ${textSize == 'small' ? 'text-sm' : 'text-base'}`\n    const truncateStyle = { overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap'}\n\n    let wrapperClasses = `flex flex-col items-stretch justify-start gap-3 ${sizeStyles}`\n    \n    const contentClasses = `flex flex-col flex-grow`\n    \n    const noImage = !imageSrc;\n    const imageStyles = useMemo(() => ({\n        background: !noImage && `linear-gradient(rgba(0, 0, 0, 0.04), rgba(0, 0, 0, 0.12)), url(${imageSrc}) no-repeat center center / cover`, \n        backgroundSize: 'cover', \n        backgroundColor: `color-mix(in srgb, var(--base-content) 20%, transparent)`\n    }), [imageSrc, noImage]);\n\n    \n    const cornerStyles = corners === 'none' ? '' : `rounded-${corners}`;\n    const titleFont = textSize == 'small' ? 'text-base' : 'text-lg';\n    const smallerFont = textSize == 'small' ? 'text-xs' : 'text-sm';\n\n\n    return (\n        <div \n        {...attributes} {...listeners} \n        className={wrapperClasses} style={{maxWidth: width}}\n        >\n        {/* IMAGE */}\n        <div className={`relative w-full aspect-square flex items-center justify-center ${cornerStyles}`} style={imageStyles}>\n            \n            {/* TAG */}\n            {tag && \n                <div className='absolute top-1.5 left-2 rounded-full px-3 py-1.5 bg-base-0 shadow font-medium max-w-[160px] truncate overflow-ellipsis whitespace-nowrap'>\n{tag}\n            </div>}\n                \n            {/* ICON */}\n            {<div className='absolute top-1.5 right-2 rounded-full transition-all cursor-pointer p-2 hover:bg-base-0'>\n                <Icon icon={'heart'} />\n            </div>}\n        {noImage && <MediaImage width={60} height={60} style={{opacity: '0.3'}} />}\n        </div>\n        \n        {/* Description */}\n        <div className={contentClasses}>\n        \n        {/* Title */}\n        <div className={`mb-sm flex flex-row gap-2 justify-between items-center ${titleFont}`}>\n            <h3 className={`font-semibold`} style={truncateStyle}>\n{title}\n            </h3>\n            {rating && <div className='flex-shrink-0 flex flex-row items-center gap-0.5'>\n                <Icon icon='star' className='flex-shrink-0 scale-75'/>\n{rating}\n            </div>}\n        </div>\n\n        {/* Description Lines */}\n        {descriptionFirstLine && <span className={`${smallerFont} font-normal truncate overflow-ellipsis`} style={truncateStyle}>\n{descriptionFirstLine}\n        </span>}\n        {descriptionSecondLine && <span className={`${smallerFont} font-light`} style={truncateStyle}>\n{descriptionSecondLine}\n        </span>}\n\n        {/* Price and Price Note */}\n        {price && \n            <div className={`mt-2 flex flex-row gap-1 items-end items-baseline ${smallerFont}`}>\n                <span style={truncateStyle} className={`font-semibold ${titleFont}`}>\n{price}\n                </span>\n                <span style={truncateStyle}>\n{priceNote}\n                </span>\n            </div>\n        }\n        </div>\n        </div>\n    );\n}\n\nProductCard.propTypes = {\n    imageSrc: PropTypes.string,\n    textSize: PropTypes.oneOf(['small', 'medium']),\n    width: PropTypes.oneOf(['100%', '200px', '320px']),\n    title: PropTypes.string.isRequired,\n    tag: PropTypes.string,\n    rating: PropTypes.string,\n    descriptionFirstLine: PropTypes.string,\n    descriptionSecondLine: PropTypes.string,\n    price: PropTypes.string,\n    priceNote: PropTypes.string,\n    corners: PropTypes.oneOf([\"none\", \"sm\", \"md\", \"lg\", 'xl']),\n};\n\n"],"names":[],"mappings":"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"}