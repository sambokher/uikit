{"version":3,"file":"ProgressCircle.js","sources":["../../src/react/ProgressCircle.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function ProgressCircle(props) {\n    \n    const {\n        label = 'label',\n        circleRadius = '48px',\n        color = 'info-content',\n        progress = '50%',\n        showProgressValue = true,\n        attributes,\n        listeners\n      } = props;\n      \n    const noLabel = !label || label === ''\n    const radius = parseInt(circleRadius, 10);\n    const strokeWidth = {\n        '32px': 8,\n        '48px': 10,\n        '60px': 12,\n        '80px': 14\n    }[circleRadius] || 10;\n\n    const normalizedRadius = radius - strokeWidth / 2;\n    const circumference = normalizedRadius * 2 * Math.PI;\n\n    // Parse the percentage string to extract the numerical value\n    const progressValue = parseInt(progress, 10);\n    const strokeDashoffset = circumference - (progressValue / 100) * circumference;\n    \n    const fontSizeMap = {\n        '32px': 'text-lg',\n        '48px': 'text-xl',\n        '60px': 'text-2xl',\n        '80px': 'text-3xl'\n    }\n    const labelFontSizeMap = {\n        '32px': 'text-sm',\n        '48px': 'text-sm',\n        '60px': 'text-base',\n        '80px': 'text-base'\n    }\n\n    let wrapperClasses = `flex flex-col items-center gap-1`\n\n    return (\n        <div \n        {...attributes} {...listeners} \n            className={wrapperClasses}\n        >   \n         <div style={{ position: 'relative', width: radius * 2, height: radius * 2 }}>\n            <svg height={radius * 2} width={radius * 2} style={{ transform: 'rotate(-90deg)' }}>\n                {/* Background circle in light gray */}\n                <circle\n                    stroke=\"currentColor\"\n                    style={{ strokeOpacity: 0.08 }}\n                    fill=\"transparent\"\n                    strokeWidth={strokeWidth}\n                    strokeDasharray={`${circumference} ${circumference}`}\n                    r={normalizedRadius}\n                    cx={radius}\n                    cy={radius}\n                    strokeLinecap=\"round\" \n                />\n                {/* Foreground circle in blue showing the progress */}\n                <circle\n                    stroke={`var(--${color})`}\n                    fill=\"transparent\"\n                    strokeWidth={strokeWidth}\n                    strokeDasharray={`${circumference} ${circumference}`}\n                    style={{ strokeDashoffset }}\n                    r={normalizedRadius}\n                    cx={radius}\n                    cy={radius}\n                    strokeLinecap=\"round\" \n                />\n            </svg>\n\n            {/* LABELING */}\n            <div className={`flex flex-col items-center justify-center max-w-full gap-1 leading-tight font-semibold absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2`}>\n                {radius >= 60 && !noLabel ? \n                <h3 className={`whitespace-nowrap text-center font-normal ${labelFontSizeMap[circleRadius]}`} style={{ maxWidth: radius * 1.2 }}>\n{label}\n                    </h3> \n                : null}\n                {showProgressValue && <span className={`${fontSizeMap[circleRadius]}`}>{progress}</span>}\n            </div>\n        </div>\n        {radius < 60 && !noLabel ? <h3 className={`whitespace-nowrap font-normal ${labelFontSizeMap[circleRadius]}`}>\n{label}\n                </h3>\n        : null}\n        </div>\n    ); \n}\n\nProgressCircle.propTypes = {\n    label: PropTypes.string,\n    circleRadius: PropTypes.oneOf(['32px', '48px', '60px', '80px']),\n    color: PropTypes.oneOf(['info-content', 'primary', 'accent', 'success-content', 'base-content', 'warning-content', 'error-content']),\n    progress: PropTypes.oneOf(['0%', '10%', '20%', '30%', '40%', '50%', '60%', '70%', '80%', '90%', '100%']),\n    showProgressValue: PropTypes.bool,\n    children: PropTypes.node\n};\n\n"],"names":[],"mappings":"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"}