{"version":3,"file":"ProgressSemiCircle.js","sources":["../../src/react/ProgressSemiCircle.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function ProgressSemiCircle(props) {\n    \n    const {\n        label = 'label',\n        circleRadius = '48px',\n        color = 'info-content',\n        progress = '50%',\n        showProgressValue = true,\n        attributes,\n        listeners\n      } = props;\n      \n    \n    const radius = parseInt(circleRadius, 10);\n    const strokeWidth = {\n        '32px': 8,\n        '48px': 10,\n        '60px': 12,\n        '80px': 14\n    }[circleRadius] || 10;\n    \n    const normalizedRadius = radius - strokeWidth / 2;\n    const circumference = normalizedRadius * Math.PI;\n\n    const progressValue = parseInt(progress, 10);\n\n    const fontSizeMap = {\n        '32px': 'text-base',\n        '48px': 'text-lg',\n        '60px': 'text-xl',\n        '80px': 'text-2xl'\n    }\n    const labelFontSizeMap = {\n        '32px': 'text-sm',\n        '48px': 'text-sm',\n        '60px': 'text-sm',\n        '80px': 'text-base'\n    }\n\n    let wrapperClasses = `flex flex-col items-center gap-1`\n\n    return (\n        <div   \n        {...attributes} {...listeners} \n                className={wrapperClasses}\n             >\n            <div style={{ position: 'relative', width: radius * 2, height: radius + strokeWidth / 2, overflow: 'hidden' }}>\n            \n            {/* Semicircle */}\n            <svg height={radius * 2} width={radius * 2} style={{ transform: 'rotate(180deg)' }}>\n                    <circle \n                            stroke=\"currentColor\"\n                            style={{ strokeOpacity: 0.08 }}\n                            fill=\"transparent\"\n                            strokeWidth={strokeWidth}\n                            strokeDasharray={`${circumference} ${circumference}`}\n                            r={normalizedRadius}\n                            cx={radius}\n                            cy={radius}\n                            strokeLinecap=\"round\" />\n                     <circle \n                        stroke={`var(--${color})`}\n                        fill=\"transparent\"\n                        strokeWidth={strokeWidth}\n                        strokeDasharray={`${((progressValue)/ 100) * circumference} ${circumference - ((progressValue - strokeWidth) / 100) * circumference}`}\n                        r={normalizedRadius}\n                        cx={radius}\n                        cy={radius}\n                        strokeLinecap=\"round\" />\n                </svg>\n\n            {/* Label */}\n            <div className={`flex flex-col items-center justify-center leading-tight font-semibold absolute bottom-0 left-1/2 -translate-x-1/2`}>\n                {radius >= 60 && label ? <h3 className={`whitespace-nowrap text-center font-normal ${labelFontSizeMap[circleRadius]}`} style={{ maxWidth: radius * 1.2 }}>\n{label}\n                </h3> \n            : null}\n                {showProgressValue && <span className={`${fontSizeMap[circleRadius]}`}>{progress}</span>}\n            </div>\n            </div>\n            {radius < 60 && label ? <h3 className={`whitespace-nowrap font-normal ${labelFontSizeMap[circleRadius]}`}>\n{label}\n            </h3> : null}\n        </div>\n    );\n}\n\nProgressSemiCircle.propTypes = {\n    label: PropTypes.string,\n    circleRadius: PropTypes.oneOf(['32px', '48px', '60px', '80px']),\n    color: PropTypes.oneOf(['info-content', 'primary', 'accent', 'success-content', 'base-content', 'warning-content', 'error-content']),\n    progress: PropTypes.oneOf(['0%', '10%', '20%', '30%', '40%', '50%', '60%', '70%', '80%', '90%', '100%']),\n    showProgressValue: PropTypes.bool,\n};\n\n"],"names":[],"mappings":";;;AAGe,SAAS,kBAAkB,CAAC,KAAK,EAAE;AAClD;AACA,IAAI,MAAM;AACV,QAAQ,KAAA,GAAQ,OAAO;AACvB,QAAQ,YAAA,GAAe,MAAM;AAC7B,QAAQ,KAAA,GAAQ,cAAc;AAC9B,QAAQ,QAAA,GAAW,KAAK;AACxB,QAAQ,iBAAA,GAAoB,IAAI;AAChC,QAAQ,UAAU;AAClB,QAAQ,SAAA;AACR,OAAM,GAAI,KAAK,CAAA;AACf;AACA;AACA,IAAI,MAAM,SAAS,QAAQ,CAAC,YAAY,EAAE,EAAE,CAAC,CAAA;AAC7C,IAAI,MAAM,cAAc;AACxB,QAAQ,MAAM,EAAE,CAAC;AACjB,QAAQ,MAAM,EAAE,EAAE;AAClB,QAAQ,MAAM,EAAE,EAAE;AAClB,QAAQ,MAAM,EAAE,EAAA;AAChB,KAAK,CAAC,YAAY,CAAA,IAAK,EAAE,CAAA;AACzB;AACA,IAAI,MAAM,gBAAiB,GAAE,SAAS,WAAA,GAAc,CAAC,CAAA;AACrD,IAAI,MAAM,aAAc,GAAE,mBAAmB,IAAI,CAAC,EAAE,CAAA;AACpD;AACA,IAAI,MAAM,gBAAgB,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAA;AAChD;AACA,IAAI,MAAM,cAAc;AACxB,QAAQ,MAAM,EAAE,WAAW;AAC3B,QAAQ,MAAM,EAAE,SAAS;AACzB,QAAQ,MAAM,EAAE,SAAS;AACzB,QAAQ,MAAM,EAAE,UAAA;AAChB,MAAI;AACJ,IAAI,MAAM,mBAAmB;AAC7B,QAAQ,MAAM,EAAE,SAAS;AACzB,QAAQ,MAAM,EAAE,SAAS;AACzB,QAAQ,MAAM,EAAE,SAAS;AACzB,QAAQ,MAAM,EAAE,WAAA;AAChB,MAAI;AACJ;AACA,IAAI,IAAI,cAAA,GAAiB,CAAC,gCAAgC,EAAA;AAC1D;AACA,IAAI;AACJ,QAAQ,KAAC,CAAA,aAAA,CAAA,KAAA,EAAA;AACT,QAAQ,GAAI,UAAU,EAAE,GAAI,SAAS;AACrC,gBAAgB,SAAS,EAAC,cAAe,EAAA;AAC5B;AACb,cAAY,KAAA,CAAA,aAAA,CAAC,KAAI,EAAA,EAAA,KAAK,EAAC,EAAG,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAE,MAAO,GAAE,CAAC,EAAE,MAAM,EAAE,MAAO,GAAE,WAAY,GAAE,CAAC,EAAE,QAAQ,EAAE,QAAS,EAAC,EAAC;AAC1H;AACA;AACA,cAAY,KAAA,CAAA,aAAA,CAAC,SAAI,MAAM,EAAC,SAAU,CAAC,EAAE,KAAK,EAAC,SAAU,CAAC,EAAE,KAAK,EAAC,EAAG,SAAS,EAAE,gBAAiB,EAAC,EAAC;AAC/F,sBAAoB,KAAC,CAAA,aAAA,CAAA,QAAA,EAAA;AACrB,4BAA4B,MAAM,EAAC,cAAA;AACnC,4BAA4B,KAAK,EAAC,EAAG,aAAa,EAAE,MAAM;AAC1D,4BAA4B,IAAI,EAAC,aAAA;AACjC,4BAA4B,WAAW,EAAC,WAAY;AACpD,4BAA4B,eAAe,EAAC,CAAE,EAAA,aAAA,CAAA,CAAA,EAAA,aAAA,CAAA,CAAA;AACA,4BAAA,CAAA,EAAA,gBAAA;AACA,4BAAA,EAAA,EAAA,MAAA;AACA,4BAAA,EAAA,EAAA,MAAA;AACA,4BAAA,aAAA,EAAA,OAAA,EAAA,EAAA;AACA,uBAAA,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACA,wBAAA,MAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AACA,wBAAA,IAAA,EAAA,aAAA;AACA,wBAAA,WAAA,EAAA,WAAA;AACA,wBAAA,eAAA,EAAA,CAAA,EAAA,CAAA,CAAA,aAAA,GAAA,GAAA,IAAA,aAAA,CAAA,CAAA,EAAA,aAAA,GAAA,CAAA,CAAA,aAAA,GAAA,WAAA,IAAA,GAAA,IAAA,aAAA,CAAA,CAAA;AACA,wBAAA,CAAA,EAAA,gBAAA;AACA,wBAAA,EAAA,EAAA,MAAA;AACA,wBAAA,EAAA,EAAA,MAAA;AACA,wBAAA,aAAA,EAAA,OAAA,EAAA,EAAA;AACA,iBAAA;AACA;AACA;AACA,cAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAA,SAAA,EAAA,CAAA,iHAAA,CAAA,EAAA;AACA,kBAAA,MAAA,IAAA,EAAA,IAAA,KAAA,GAAA,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAA,SAAA,EAAA,CAAA,0CAAA,EAAA,gBAAA,CAAA,YAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,QAAA,EAAA,MAAA,GAAA,GAAA,EAAA,EAAA;AACA,EAAA,KAAA;AACA,iBAAA;AACA,cAAA,IAAA;AACA,kBAAA,iBAAA,IAAA,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,EAAA,SAAA,EAAA,CAAA,EAAA,WAAA,CAAA,YAAA,CAAA,CAAA,CAAA,EAAA,EAAA,QAAA,CAAA;AACA,aAAA;AACA,aAAA;AACA,cAAA,MAAA,GAAA,EAAA,IAAA,KAAA,GAAA,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAA,SAAA,EAAA,CAAA,8BAAA,EAAA,gBAAA,CAAA,YAAA,CAAA,CAAA,CAAA,EAAA;AACA,EAAA,KAAA;AACA,aAAA,GAAA,IAAA;AACA,SAAA;AACA,MAAA;AACA,CAAA;AACA;AACA,kBAAA,CAAA,SAAA,GAAA;AACA,IAAA,KAAA,EAAA,SAAA,CAAA,MAAA;AACA,IAAA,YAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;AACA,IAAA,KAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,cAAA,EAAA,SAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,cAAA,EAAA,iBAAA,EAAA,eAAA,CAAA,CAAA;AACA,IAAA,QAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,CAAA,CAAA;AACA,IAAA,iBAAA,EAAA,SAAA,CAAA,IAAA;AACA,CAAA;;;;"}