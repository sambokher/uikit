{"version":3,"file":"Search.js","sources":["../../src/react/Search.js"],"sourcesContent":["import PropTypes from 'prop-types'\nimport React, { useState } from 'react';\nimport { ButtonIcon, Icon } from './index'\n\nexport default function Search(props) {\n    \n    const {\n        size = 'medium',\n        state = 'default',\n        bgColor = 'base-0',\n        placeholder = 'Search',\n        includeIcon = true,\n        width = 'auto',\n        hasOutline = true,\n        attributes,\n        listeners,\n        defaultIconSet\n      } = props;\n    \n    const [ isFocused, setIsFocused ] = useState(false);\n    const [ query , setQuery] = useState('')\n\n    const sizeStyles = size == 'small' ? `py-1 px-2 gap-1.5 text-xs` : size == 'large' ? `py-2 px-3 gap-3 text-base` : `py-1.5 px-2 gap-3 text-sm`;\n    const cornerStyles = size == \"small\" ? \"rounded\" : size == \"large\" ? \"rounded-lg\" : \"rounded-md\"\n    \n    const widthStyle = width != 'auto' ? `w-${width}` : size == 'small' ? 'min-w-[120px]' : size == 'large' ? 'min-w-[200px]' : 'min-w-[160px]'\n\n    let stateStyles = hasOutline ? isFocused ? `border border-accent` : `border border-base-300` : 'border border-transparent'\n    switch (state) {\n        case 'disabled':\n            stateStyles = `bg-base-100 opacity-70 cursor-not-allowed ${hasOutline ? 'border border-base-300' : ''}`\n            break;\n        case 'error':\n            stateStyles = `text-warning-content ${hasOutline ? 'border border-warning-content' : ''}`\n            break;\n        case 'success':\n            stateStyles = `text-success-content ${hasOutline ? 'border border-success-content' : ''}`\n            break;\n    }\n    const bgStyles = (bgColor && bgColor !== 'none') ? `bg-${bgColor}` : '';\n    const fontColor = (bgColor && bgColor !== 'none') ? 'text-base-content' : '' // inherit from parent\n    let classes = `w-full flex items-center justify-between truncate ellipsis relative box-border font-medium ${sizeStyles} ${cornerStyles} ${bgStyles} ${stateStyles} ${fontColor}`\n    \n    const gapStyles = size == 'small' ? 'gap-0.5' : size == 'large' ? 'gap-1.5' : 'gap-1'\n    let wrapperClasses = `flex flex-col ${widthStyle} ${gapStyles} relative`\n\n    const iconWidth = size == 'small' ? 'w-4' : size == 'large' ? 'w-6' : 'w-5'\n    const IconComponent = includeIcon ? <Icon icon={'search'} className={`flex-shrink-0 scale-90  ${iconWidth}`} defaultIconSet={defaultIconSet} /> : null\n    const activeSearch = query && query.length > 0;\n    \n    return (\n    <div \n    {...attributes} {...listeners} \n        className={wrapperClasses}\n    >\n        <div className={classes}>\n        {IconComponent}\n            <input\n            type='text'\n            onFocus={() => setIsFocused(true)}\n            onBlur={() => setIsFocused(false)}\n            disabled={state == 'disabled'}\n            className={`flex-grow text-left border-transparent focus:outline-none focus:ring-0 font-medium\n            placeholder-base-500 text-base-content bg-transparent w-full truncate ellipsis ${state == 'disabled' && 'cursor-not-allowed'}`}\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            placeholder={placeholder}\n            />  \n        \n        {activeSearch && \n        <div className={`absolute text-xs bg-${bgColor} cursor-pointer rounded ${size == 'large' ? 'right-2' : 'right-1.5'} top-1/2 -translate-y-1/2 transition-all rounded-lg`}>\n            <ButtonIcon icon='close'\n            size=\"small\"\n            type={\"ghost\"}\nonClick={() => setQuery('')}\n          /></div>}\n\n        </div>\n    </div>\n);  \n}\n\nSearch.propTypes = {\n    width: PropTypes.oneOf([\"auto\", \"1/2\", \"full\"]),\n    state: PropTypes.oneOf(['default', 'disabled', 'error', 'success']),\n    bgColor: PropTypes.oneOf(['none', 'base-0', 'base-50', 'base-100']),\n    placeholder: PropTypes.string,\n    includeIcon: PropTypes.bool,\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\n    hasOutline: PropTypes.bool,\n};\n\n"],"names":[],"mappings":"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"}