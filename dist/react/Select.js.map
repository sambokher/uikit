{"version":3,"file":"Select.js","sources":["../../src/react/Select.js"],"sourcesContent":["import PropTypes from 'prop-types'\nimport React, { useState, useEffect } from 'react';\nimport { Icon } from './index'\n\nexport default function Select(props) {\n    \n    const {\n        size = 'medium',\n        value = '',\n        placeholder = 'Select',\n        showOptions = false,\n        bgColor = 'base-0',\n        label = '',\n        helperText = '',\n        state = 'default',\n        rightIcon = 'chevron-down',\n        width = 'auto',\n        hasOutline = false,\n        onSelect = () => {},\n        defaultIconSet = 'heroicons',\n        options = ['Option A', 'Option B', 'Option C'],\n        attributes,\n        listeners\n      } = props;\n\n    const [ open, setOpen ] = useState(showOptions)\n    const selectedOption = value || ''\n\n    useEffect(() => {\n        setOpen(showOptions);\n    }, [showOptions]);\n    \n    const sizeStyles = size == 'small' ? `py-1 px-2 gap-1.5 text-xs` : size == 'large' ? `py-2 px-3 gap-3 text-base` : `py-1.5 px-2 gap-3 text-sm`;\n        \n    const cornerStyles = size == \"small\" ? \"rounded\" : size == \"large\" ? \"rounded-lg\" : \"rounded-md\"\n    let stateStyles = '';\n    switch (state) {\n        case 'default':\n            stateStyles = hasOutline ? open ? `border border-accent` : `border border-base-300` : 'border border-transparent'\n            break;\n        case 'disabled':\n            stateStyles = `bg-base-100 opacity-70 cursor-not-allowed ${hasOutline ? 'border border-base-300' : ''}`\n            break;\n        case 'error':\n            stateStyles = `text-warning-content ${hasOutline ? 'border border-warning-content' : ''}`\n            break;\n        case 'success':\n            stateStyles = `${hasOutline ? 'border border-success-content' : ''}`\n            break;\n    }\n\n    const bgStyles = (bgColor && bgColor !== 'none') ? `bg-${bgColor} text-base-content` : '';\n    let classes = `w-full flex items-center justify-between truncate ellipsis box-border font-medium select-none ${sizeStyles} ${cornerStyles} ${bgStyles} ${stateStyles}`\n    const labelTextSize = size == 'small' ? `text-xs` :  size == 'large' ? `text-lg`: `text-sm`;\n    const labelClasses = `${bgColor == 'none' ? '': 'text-base-content'} ${labelTextSize} font-medium`\n\n    const messageTextColor = state == 'error' ? stateStyles = 'text-error-content' : state == 'warning' ? stateStyles = 'text-warning-content' : state == 'success' ? stateStyles = 'text-success-content' : 'text-base-content'\n    const messageClasses = `text-sm ${messageTextColor}`\n    const widthStyle = width != 'auto' ? `w-${width}` : size == 'small' ? 'min-w-[120px]' : size == 'large' ? 'min-w-[200px]' : 'min-w-[160px]'\n    const gapStyles = size == 'small' ? 'gap-0.5' : size == 'large' ? 'gap-1.5' : 'gap-1'\n    let wrapperClasses = `flex flex-col ${widthStyle} ${gapStyles} relative`\n\n    const RightIconComponent = rightIcon !== 'none' ? \n        <Icon \n            icon={rightIcon?.toLowerCase()} \n            defaultIconSet={defaultIconSet} \n            className={`flex-shrink-0 flex-grow-0 opacity-80 scale-75`}\n            /> : null;\n\n    /* OPTIONS STYLING */\n    const shadowStyles = size == 'small' ? 'shadow-sm' : size == 'large' ? 'shadow-md' : 'shadow'\n    const optionsBorderRadius = (size === 'small' ? 'rounded' : size === 'large' ? 'rounded-lg' : 'rounded-md');\n    const optionsClasses = `w-full absolute mt-2 bg-white overflow-hidden ${optionsBorderRadius} ${shadowStyles} border border-base-100`\n    const optionSizeStyles = size == 'small' ? `py-0.5 px-2 gap-1.5 text-xs min-w-[120px]` :  size == 'large' ? `py-2 px-3 gap-3 text-base min-w-[200px]`: `py-1.5 px-2 gap-3 text-sm min-w-[160px]`;\n    const optionClasses = `${optionSizeStyles} hover:bg-base-100 transition-all duration-100 ease-in-out cursor-default`\n\n    return (\n        <div\n        {...attributes} {...listeners} \n            className={wrapperClasses}\n        \n    >\n        {label && <label className={labelClasses}>\n{label}\n                </label>}\n        <div className={classes}\nonClick={() => setOpen(!open)}\n        >\n{selectedOption ?\nselectedOption :\n            <span className={'text-base-500'}> \n{placeholder}\n            </span>} \n        \n        {RightIconComponent}\n        {open && (\n            <div className={optionsClasses}\n             style={{ position: 'absolute', top: '100%', left: 0, zIndex: 1 }}>\n                {options.map((option, index) => (\n                    <div \n                        key={index}\n                        className={optionClasses}\n                        /* replace to '                        onClick={(e) => {\n                            e.stopPropagation();\n                            onSelect(option);\n                        }' */\n                        >\n                    {option}\n                    </div>\n                ))}\n            </div>\n        )}\n        </div>\n        {helperText && <span className={messageClasses}>\n{helperText}\n        </span>}\n    </div>\n);  \n}\n\nSelect.propTypes = {\n    width: PropTypes.oneOf(['auto', '1/2', 'full']),\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\n    label: PropTypes.string,\n    state: PropTypes.oneOf(['default', 'disabled', 'error', 'success']),\n    bgColor: PropTypes.oneOf(['base-0', 'base-50', 'base-100', 'none']),\n    value: PropTypes.string,\n    placeholder: PropTypes.string,\n    showOptions: PropTypes.bool,\n    options: PropTypes.arrayOf(PropTypes.string),\n    rightIcon: PropTypes.oneOf(['chevron-down','none']),\n    hasOutline: PropTypes.bool,\n    onSelect: PropTypes.func,\n    helperText: PropTypes.string,\n};\n\n"],"names":[],"mappings":"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"}