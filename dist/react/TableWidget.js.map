{"version":3,"file":"TableWidget.js","sources":["../../src/react/TableWidget.js"],"sourcesContent":["import PropTypes from 'prop-types'\nimport React, { useState } from 'react';\nimport * as UIKit from './index';\nimport { Pagination } from './index';\nimport { Icon } from './index'\nimport { spacingMap } from './helpers.js';\n\nconst sampleColumns = [\n  {\n      accessor: 'name', \n      header: 'Person',\n      width: '40%',\n      type: 'text',\n      direction: 'flex-row',\n      alignItems: 'center',\n      justifyContent: 'start',\n      isSortable: true, \n      hideOnMobile: false\n  },\n  { \n      accessor: 'role', \n      header: 'Role',\n      width: '30%', \n      type: 'object',\n      direction: 'flex-row',\n      alignItems: 'center', \n      justifyContent: 'start',\n      isSortable: true,\n      hideOnMobile: true\n  },\n  { \n      accessor: 'tags', \n      header: 'Status',\n      width: '20%', \n      direction: 'flex-col',\n      type: 'arrayOfObjects',\n      alignItems: 'center', \n      justifyContent: 'start',\n      isSortable: false, \n      hideOnMobile: true\n  },\n  {\n      accessor: 'actions', \n      header: '',\n      width: '10%',\n      type: 'arrayOfObjects', \n      direction: 'flex-row',\n      alignItems: 'center',\n      justifyContent: 'end',\n      displayOnHoverOnly: true,\n      isSortable: false, \n  }\n]\n\nconst dummyData = [\n  {\n    id: 1,\n    name: 'John Doe', \n    role: { component: \"Select\", props: { size: \"small\", currentOption: \"Manager\", } },\n    tags: { component: \"Status\", props: { text: \"Online\", color: \"success\", size: \"small\", showIndicator: true } },\n    actions: [\n      { component: \"IcoNoirIcon\", props: { name: \"EditPencil\", size: \"20\" } },\n      { component: \"IcoNoirIcon\", props: { name: \"Trash\", size: \"20\" } }\n    ],\n  },\n  {\n    id: 2, \n    name: 'Apple Doe',\n    role: { component: \"Select\", props: { size: \"small\", currentOption: \"Engineer\", } },\n    tags: { component: \"Status\", props: { text: \"Offline\", color: \"error\", size: \"small\", showIndicator: true } },\n    actions: [\n      { component: \"IcoNoirIcon\", props: { name: \"EditPencil\", size: \"20\" } },\n      { component: \"IcoNoirIcon\", props: { name: \"Trash\", size: \"20\" } }\n    ],\n  },\n  {\n    id: 3,\n    name: 'Jane Doe',\n    role: { component: \"Select\", props: { size: \"small\", currentOption: \"Analyst\", } },\n    tags: { component: \"Status\", props: { text: \"Busy\", color: \"warning\", size: \"small\", showIndicator: true } },\n    actions: [\n      { component: \"IcoNoirIcon\", props: { name: \"EditPencil\", size: \"20\" } },\n      { component: \"IcoNoirIcon\", props: { name: \"Trash\", size: \"20\" } }\n    ],\n  },\n  {\n    id: 4,\n    name: 'John Doe',\n    role: { component: \"Select\", props: { size: \"small\", currentOption: \"Consultant\" } },\n    tags: { component: \"Status\", props: { text: \"Away\", color: \"info\", size: \"small\", showIndicator: true } },\n    actions: [\n      { component: \"IcoNoirIcon\", props: { name: \"EditPencil\", size: \"20\" } },\n      { component: \"IcoNoirIcon\", props: { name: \"Trash\", size: \"20\" } }\n    ],\n  }\n]\n\nexport default function TableWidget(props) {\n\n  const {\n    bgColor = null,\n    textSize = 'sm',\n    cellPaddingX = '8px',\n    cellPaddingY = '6px',\n    pagination = 'none',\n    showHeader = true,\n    corners = 'md',\n    borders = 'horiz',\n    hasRowSelect = false,\n    columnData = sampleColumns, \n    rowData = dummyData,        \n    hasOutline = false,\n    onRowClick= () => {},\n    attributes,\n    listeners\n  } = props;\n    \n    const isMobile = false\n    const [selectedRows, setSelectedRows] = useState([])\n    const [ sortState, setSortState ] = useState({ accessor: 'name', direction: 'asc' })\n    \n    function handleAllRowsSelect () {\n      const rowIds = rowData.map((item) => item.id) || []\n      const newSelectedRows = selectedRows.length < rowIds.length ? rowIds : [] \n      setSelectedRows(newSelectedRows)\n    }\n    function handleRowSelect (rowId) {\n      let newRows = [...selectedRows]\n      if (selectedRows.includes(rowId)) {\n        newRows = selectedRows.filter((row) => row !== rowId)\n      } else {\n        newRows = [...selectedRows, rowId]\n      }\n      setSelectedRows(newRows)\n    }\n    // Pre-process data\n    let columns = columnData\n    let data = [...rowData].sort((a, b) => {\n    if (a[sortState.accessor] < b[sortState.accessor]) {\n      return sortState.direction === 'asc' ? -1 : 1;\n    }\n    if (a[sortState.accessor] > b[sortState.accessor]) {\n      return sortState.direction === 'asc' ? 1 : -1;\n    }})\n\n    \n    const addSelection = hasRowSelect\n    if (addSelection) {\n        const newColumn = {\n            accessor: 'checkbox',\n            header: null,\n            width: '6%',\n            type: 'checkbox',\n            direction: 'flex-row',\n            alignItems: 'center',\n            justifyContent: 'start',\n            isSortable: false,\n            hideOnMobile: false\n        }\n        columns = [newColumn, ...columns]\n        \n        data = data.map((row) => {\n            return { checkbox: { \n              component: \"Checkbox\", \n              props: { \n                isChecked: selectedRows.includes(row?.id),\n                size: \"small\", \n                label: null, \n                onChange: () => handleRowSelect(row?.id)\n                } \n              }, \n              ...row,\n            }\n        })\n    }\n\n    // STYLING \n    const textColor = (!bgColor || bgColor == 'none') ? '' : `text-base-content`\n    const cornerStyles = corners != 'none' ? `rounded-${corners}` : ''\n    const textSizeStyles = textSize != 'auto' ? `text-${textSize}` : ''\n    \n    let tableContainerClasses = `w-full table-auto border-collapse ${textSizeStyles} ${textColor} ${cornerStyles}`\n    \n    const lighterBorder = borders == 'none' ? 'none' : `1px solid var(--base-100)`\n    const darkerBorder = borders == 'none' ? 'none' : `1px solid var(--base-200)`\n    const borderRadius = corners == 'none' ? '0' : `var(--border-radius-${corners})` || '4px'\n    \n    // Background color for the table rows\n    function getRowStyles(index, rowId) {\n      const rowSelected = selectedRows.includes(rowId)\n      let rowStyles = ``\n      if (!bgColor || bgColor == 'none') {\n        rowStyles = rowSelected ? 'bg-base-50' : 'hover:bg-base-50' // transparent bg only highlights on hover or when selected\n      } else if (bgColor == 'zebra') {\n        rowStyles = index % 2 === 0 ? 'bg-base-50' : 'bg-base-0 hover:bg-base-50' // zebra stripes\n      } else {\n        rowStyles = bgColor == 'base-0' ? \n        rowSelected ? `bg-base-50` : `bg-base-0 hover:bg-base-50` : \n        bgColor == 'base-50' ? rowSelected ? `bg-base-100` : `bg-base-50 hover:bg-base-100` : ''\n      }\n      return rowStyles\n    }\n\n    const padding = {\n      paddingLeft: cellPaddingX,\n      paddingRight: cellPaddingX,\n      paddingTop: cellPaddingY,\n      paddingBottom: cellPaddingY\n    }\n    \n    // This function helps style the cells based on the column configuration\n    const styleFromColumn = (column, isHeader=false) => ({\n        ...(isHeader && !showHeader ? {} : padding),\n        display: isHeader && !showHeader && 'none',\n        height: isHeader ? showHeader ? 'auto' : 0 : '100%',\n        textAlign: column?.textAlign,\n        whiteSpace: column?.nowrap ? 'nowrap' : 'normal', \n        alignItems: column?.alignItems,\n        justifyContent: column?.justifyContent,\n        flexDirection: column?.direction,\n      });\n    \n    // This function ensures that the total width of the columns is 100%\n    const totalVisibleWidth = columns?.reduce((total, column) => {\n      if (!isMobile || !column.hideOnMobile) {\n        const widthValue = parseFloat(column.width);\n        return total + widthValue;\n      }\n      return total;\n    }, 0);\n\n    // This function renders the content of each cell\n    function renderCell({ content, columnType='text' }){\n      if (columnType === 'object' || columnType === 'arrayOfObjects' || columnType === 'checkbox') {\n        if (!Array.isArray(content)) {\n          content = [content]; // Convert non-array content to an array\n        }\n    \n        return (\n          <>\n            {content.map((item, idx) => {\n              if (item && typeof item === 'object' && item.component && item.props) {\n                const Component = UIKit[item.component]\n                if (Component) return (\n                  <React.Fragment key={idx}>\n                    {React.createElement(Component, item.props)}\n                  </React.Fragment>\n                );\n              } else {\n                return <span key={idx}>{String(item)}</span>;\n              }\n            })}\n          </>\n        );\n      } else {\n        // For 'text', 'number', 'datetime', render the content directly\n        return <span>{String(content)}</span>;\n      }\n    };    \n\n    return (\n      <div \n      {...attributes} {...listeners} \n      className='relative w-full flex-shrink-0 border-spacing-0'>\n        <table className={tableContainerClasses}\n         style={{\n          // tableLayout: 'fixed',  \n          borderCollapse: 'separate',  \n          borderSpacing: 0,\n          border: darkerBorder,\n          borderRadius\n        }}\n        \n        >\n        \n          {/* TABLE HEADER */}\n          <thead >\n          <tr>\n            {columns?.map((column, index) => {\n              if (isMobile && column.hideOnMobile) {\n                return null; // Don't render this column on mobile\n              }\n              const originalWidthPercent = parseFloat(column.width);\n              const adjustedWidth = (originalWidthPercent / totalVisibleWidth) * 100;\n              const isSortable = column.isSortable && column.type !== 'object' && column.type !== 'arrayOfObjects';\n              const isSorted = sortState.accessor == column.accessor;\n\n              return (<th key={index} \n                className={`${column?.hideOnMobile ? 'hidden md:table-cell' : 'table-cell'} relative`}\n                style={{ \n                width: `${adjustedWidth.toFixed(2)}%`,\n                backgroundColor: (!bgColor || bgColor == 'none') ? '' : bgColor == 'base-100' ? 'var(--base-100)' : 'var(--base-0)',\n                borderRight: (borders == 'vert' || borders == 'all') ? lighterBorder : 'none',\n                borderBottom: showHeader && borders !== 'none' && borders != 'vert' ? darkerBorder : 'none',\n                \n                ...(showHeader && index == 0 ? { borderTopLeftRadius: borderRadius } : {}),\n                ...(showHeader && index === columns.length - 1 ? { borderTopRightRadius: borderRadius } : {}),\n                // Ensure that the right border is not applied to the last header cell\n                ...(index === columns.length - 1 ?  { borderRight: 'none'} : {}),\n                }}>\n                  <div \n                    className='flex gap-1.5 h-full relative group items-center select-auto'  \n                    style={styleFromColumn(column, true)} >\n                  {column.type === 'checkbox' ? \n                    <UIKit.Checkbox \n                      size='small' \n                      isChecked={selectedRows.length > 0}\n                      label={null} \n                      isPartial={selectedRows.length != rowData.length}\n                      onChange={handleAllRowsSelect}\n                    /> : \n                  column.header}\n                  {isSorted ?\n                  <div className={`rounded-full hover:bg-base-200 cursor-pointer`} \n                  onClick={(e) => \n                      {e.stopPropagation();\n                      setSortState({ \n                      accessor: column.accessor, \n                      direction: sortState.direction === 'asc' ? 'desc' : 'asc' })}}>\n                  \n                  {sortState.direction == 'asc' ? \n                    <Icon icon='arrow-up' className='scale-75 select-none' /> : \n                    <Icon icon='arrow-down' className='scale-75 select-none'  />\n                  }\n                  </div> : isSortable && \n                  <div className={`rounded-full hover:bg-base-200 cursor-pointer opacity-0 group-hover:opacity-100`} \n                  onClick={(e) => \n                    {e.stopPropagation();\n                    setSortState({ \n                      accessor: column.accessor, \n                      direction: 'asc' })}}>\n                  <Icon icon='arrow-down' className='scale-75 select-none'  />\n                  </div>\n                  }\n                  </div>\n              </th>\n            )\n            })}\n          </tr>\n        </thead>\n\n      {/* TABLE BODY */}\n      <tbody>\n        {data?.map((item, rowIndex) => (\n          <tr key={item.id} \n          // onClick={() => onRowClick(item.id)} \n          className={`${getRowStyles(rowIndex, item.id)} relative group`} >\n            {columns.map((column, colIndex) => { \n              \n              if (isMobile && column.hideOnMobile) {\n                return null; \n              }\n\n              const originalWidthPercent = parseFloat(column.width);\n              const adjustedWidth = (originalWidthPercent / totalVisibleWidth) * 100;\n              return (<td \n                key={colIndex} \n                \n                className={`${column?.hideOnMobile ? 'hidden md:table-cell' : 'table-cell'} relative`}\n                style={{   \n                  borderRight: (borders == 'all' || borders == 'vert') ? lighterBorder : 'none',\n                  borderBottom: (borders == 'horiz' || borders == 'all') ? rowIndex < data.length - 1 ? lighterBorder : pagination == 'none' ? 'none' : darkerBorder : 'none',\n                  width: `${adjustedWidth.toFixed(2)}%`,\n                  alignContent: column.alignItems || 'start',\n                  justifyContent: column.justifyContent || 'start',\n                  height: '100%',\n                    ...(colIndex === 0 && rowIndex === data.length - 1 ? { borderBottomLeftRadius: pagination == 'none' &&  borderRadius } : {}),\n                    ...(colIndex === columns.length - 1 && rowIndex === data.length - 1 ? { borderBottomRightRadius: pagination == 'none' && borderRadius } : {}),\n                    ...(colIndex === columns.length - 1 ? { borderRight: 'none' } : {}),\n                }}>\n              <div className={`flex gap-1 h-full w-full ${column.displayOnHoverOnly ? 'opacity-0 group-hover:opacity-100' : ''}`} style={styleFromColumn(column)} >\n              {renderCell({\n                content: item[column?.accessor], \n                columnType: column?.type})}\n              </div>\n            </td>)}\n            )}\n          </tr>\n        ))}\n      </tbody>\n      {\n        pagination !== 'none' && \n        <tfoot><tr>\n        <td colSpan={columns.length} style={{overflow: 'hidden'}}>\n\n        <Pagination \n          type={pagination}  \n          bgColor={bgColor}\n          paddingX={cellPaddingX} \n          paddingY={cellPaddingY} \n          onChange={() => console.log('Change page')} // change to your function\n          currentPage={1} // add a variable\n          totalPages={8} // add a variable          \n          />\n\n      </td>\n      </tr>\n      </tfoot>\n      }\n\n        </table>\n        </div>\n    );\n}\n\n\nTableWidget.propTypes = {\n  bgColor: PropTypes.oneOf(['base-0', 'base-100', 'zebra']),\n  textSize: PropTypes.oneOf(['auto', 'xs', 'sm', 'base', 'md']),\n  cellPaddingX: PropTypes.oneOf(['4px', '6px', '8px', '12px', '16px', '24px']),\n  cellPaddingY: PropTypes.oneOf(['4px', '6px', '8px', '12px', '16px', '24px']),\n  pagination: PropTypes.oneOf(['none', 'mini', 'standard']),\n  showHeader: PropTypes.bool,\n  corners: PropTypes.oneOf(['none', 'sm', 'md', 'lg', 'xl']),\n  borders: PropTypes.oneOf(['none', 'all', 'horiz', 'vert', 'onlyHeader']),\n  hasRowSelect: PropTypes.bool,\n  columnData: PropTypes.arrayOf(PropTypes.shape({\n    accessor: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(['text', 'number', 'datetime', 'object', 'arrayOfObjects']),\n    header: PropTypes.string,\n    width: PropTypes.string.isRequired,\n    direction: PropTypes.string,\n    alignItems: PropTypes.string,\n    justifyContent: PropTypes.string,\n    isSortable: PropTypes.bool,\n    hideOnMobile: PropTypes.bool, \n  })),\n  rowData: PropTypes.arrayOf(PropTypes.object)\n};\n\n"],"names":["UIKit","index","UIKit.Checkbox"],"mappings":";;;;;;;AAAA,SAAA,cAAA,CAAA,GAAA,EAAA,EAAA,IAAA,aAAA,GAAA,SAAA,CAAA,CAAA,IAAA,KAAA,GAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA,OAAA,CAAA,GAAA,GAAA,CAAA,MAAA,EAAA,EAAA,MAAA,EAAA,GAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,EAAA,GAAA,GAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,EAAA,KAAA,gBAAA,IAAA,EAAA,KAAA,cAAA,KAAA,KAAA,IAAA,IAAA,EAAA,EAAA,OAAA,SAAA,CAAA,EAAA,CAAA,IAAA,EAAA,KAAA,QAAA,IAAA,EAAA,KAAA,gBAAA,EAAA,EAAA,aAAA,GAAA,KAAA,CAAA,CAAA,KAAA,GAAA,EAAA,CAAA,KAAA,CAAA,CAAA,EAAA,MAAA,IAAA,EAAA,KAAA,MAAA,IAAA,EAAA,KAAA,cAAA,EAAA,EAAA,KAAA,GAAA,EAAA,CAAA,CAAA,GAAA,IAAA,KAAA,KAAA,CAAA,IAAA,CAAA,aAAA,EAAA,GAAA,IAAA,CAAA,CAAA,CAAA,CAAA,aAAA,GAAA,SAAA,CAAA,EAAA,EAAA,CAAA,OAAA,KAAA,CAAA,EAMA;AACA,MAAM,gBAAgB;AACtB,EAAE;AACF,MAAM,QAAQ,EAAE,MAAM;AACtB,MAAM,MAAM,EAAE,QAAQ;AACtB,MAAM,KAAK,EAAE,KAAK;AAClB,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,SAAS,EAAE,UAAU;AAC3B,MAAM,UAAU,EAAE,QAAQ;AAC1B,MAAM,cAAc,EAAE,OAAO;AAC7B,MAAM,UAAU,EAAE,IAAI;AACtB,MAAM,YAAY,EAAE,KAAA;AACpB,GAAG;AACH,EAAE;AACF,MAAM,QAAQ,EAAE,MAAM;AACtB,MAAM,MAAM,EAAE,MAAM;AACpB,MAAM,KAAK,EAAE,KAAK;AAClB,MAAM,IAAI,EAAE,QAAQ;AACpB,MAAM,SAAS,EAAE,UAAU;AAC3B,MAAM,UAAU,EAAE,QAAQ;AAC1B,MAAM,cAAc,EAAE,OAAO;AAC7B,MAAM,UAAU,EAAE,IAAI;AACtB,MAAM,YAAY,EAAE,IAAA;AACpB,GAAG;AACH,EAAE;AACF,MAAM,QAAQ,EAAE,MAAM;AACtB,MAAM,MAAM,EAAE,QAAQ;AACtB,MAAM,KAAK,EAAE,KAAK;AAClB,MAAM,SAAS,EAAE,UAAU;AAC3B,MAAM,IAAI,EAAE,gBAAgB;AAC5B,MAAM,UAAU,EAAE,QAAQ;AAC1B,MAAM,cAAc,EAAE,OAAO;AAC7B,MAAM,UAAU,EAAE,KAAK;AACvB,MAAM,YAAY,EAAE,IAAA;AACpB,GAAG;AACH,EAAE;AACF,MAAM,QAAQ,EAAE,SAAS;AACzB,MAAM,MAAM,EAAE,EAAE;AAChB,MAAM,KAAK,EAAE,KAAK;AAClB,MAAM,IAAI,EAAE,gBAAgB;AAC5B,MAAM,SAAS,EAAE,UAAU;AAC3B,MAAM,UAAU,EAAE,QAAQ;AAC1B,MAAM,cAAc,EAAE,KAAK;AAC3B,MAAM,kBAAkB,EAAE,IAAI;AAC9B,MAAM,UAAU,EAAE,KAAK;AACvB,GAAE;AACF,EAAA;AACA;AACA,MAAM,YAAY;AAClB,EAAE;AACF,IAAI,EAAE,EAAE,CAAC;AACT,IAAI,IAAI,EAAE,UAAU;AACpB,IAAI,IAAI,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,aAAa,EAAE,SAAS,KAAK;AACtF,IAAI,IAAI,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,aAAa,EAAE,IAAK,EAAA,EAAG;AAClH,IAAI,OAAO,EAAE;AACb,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,IAAA,IAAQ;AAC7E,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,MAAO,EAAA;AACvE,KAAK;AACL,GAAG;AACH,EAAE;AACF,IAAI,EAAE,EAAE,CAAC;AACT,IAAI,IAAI,EAAE,WAAW;AACrB,IAAI,IAAI,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,aAAa,EAAE,UAAU,KAAK;AACvF,IAAI,IAAI,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,aAAa,EAAE,IAAK,EAAA,EAAG;AACjH,IAAI,OAAO,EAAE;AACb,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,IAAA,IAAQ;AAC7E,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,MAAO,EAAA;AACvE,KAAK;AACL,GAAG;AACH,EAAE;AACF,IAAI,EAAE,EAAE,CAAC;AACT,IAAI,IAAI,EAAE,UAAU;AACpB,IAAI,IAAI,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,aAAa,EAAE,SAAS,KAAK;AACtF,IAAI,IAAI,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,aAAa,EAAE,IAAK,EAAA,EAAG;AAChH,IAAI,OAAO,EAAE;AACb,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,IAAA,IAAQ;AAC7E,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,MAAO,EAAA;AACvE,KAAK;AACL,GAAG;AACH,EAAE;AACF,IAAI,EAAE,EAAE,CAAC;AACT,IAAI,IAAI,EAAE,UAAU;AACpB,IAAI,IAAI,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,aAAa,EAAE,YAAA,IAAgB;AACxF,IAAI,IAAI,EAAE,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,aAAa,EAAE,IAAK,EAAA,EAAG;AAC7G,IAAI,OAAO,EAAE;AACb,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,IAAA,IAAQ;AAC7E,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,MAAO,EAAA;AACvE,KAAK;AACL,GAAE;AACF,EAAA;AACA;AACe,SAAS,WAAW,CAAC,KAAK,EAAE;AAC3C;AACA,EAAE,MAAM;AACR,IAAI,OAAA,GAAU,IAAI;AAClB,IAAI,QAAA,GAAW,IAAI;AACnB,IAAI,YAAA,GAAe,KAAK;AACxB,IAAI,YAAA,GAAe,KAAK;AACxB,IAAI,UAAA,GAAa,MAAM;AACvB,IAAI,UAAA,GAAa,IAAI;AACrB,IAAI,OAAA,GAAU,IAAI;AAClB,IAAI,OAAA,GAAU,OAAO;AACrB,IAAI,YAAA,GAAe,KAAK;AACxB,IAAI,UAAA,GAAa,aAAa;AAC9B,IAAI,OAAA,GAAU,SAAS;AACvB,IAAI,UAAA,GAAa,KAAK;AACtB,IAAI,UAAU,EAAE,MAAM,EAAE;AACxB,IAAI,UAAU;AACd,IAAI,SAAA;AACJ,GAAE,GAAI,KAAK,CAAA;AAGX,IAAI,MAAM,CAAC,YAAY,EAAE,eAAe,IAAI,QAAQ,CAAC,EAAE,EAAA;AACvD,IAAI,MAAM,EAAE,SAAS,EAAE,YAAA,KAAiB,QAAQ,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAA;AACvF;AACA,IAAI,SAAS,mBAAoB,IAAG;AACpC,MAAM,MAAM,MAAO,GAAE,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE,CAAA,IAAK,GAAC;AACxD,MAAM,MAAM,eAAA,GAAkB,YAAY,CAAC,MAAA,GAAS,MAAM,CAAC,MAAA,GAAS,MAAA,GAAS,GAAC;AAC9E,MAAM,eAAe,CAAC,eAAe,EAAA;AACrC,KAAI;AACJ,IAAI,SAAS,eAAA,EAAiB,KAAK,EAAE;AACrC,MAAM,IAAI,OAAA,GAAU,CAAC,GAAG,YAAY,EAAA;AACpC,MAAM,IAAI,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;AACxC,QAAQ,OAAQ,GAAE,YAAY,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,GAAI,KAAI,KAAK,EAAA;AAC5D,aAAa;AACb,QAAQ,UAAU,CAAC,GAAG,YAAY,EAAE,KAAK,EAAA;AACzC,OAAM;AACN,MAAM,eAAe,CAAC,OAAO,EAAA;AAC7B,KAAI;AACJ;AACA,IAAI,IAAI,UAAU,WAAA;AAClB,IAAI,IAAI,IAAA,GAAO,CAAC,GAAG,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK;AAC3C,IAAI,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAE,GAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;AACvD,MAAM,OAAO,SAAS,CAAC,SAAU,KAAI,QAAQ,CAAC,CAAE,GAAE,CAAC,CAAA;AACnD,KAAI;AACJ,IAAI,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAE,GAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;AACvD,MAAM,OAAO,SAAS,CAAC,SAAU,KAAI,QAAQ,CAAA,GAAI,CAAC,CAAC,CAAA;AACnD,KAAK,CAAC,EAAA;AACN;AACA;AACA,IAAI,MAAM,eAAe,aAAA;AACzB,IAAI,IAAI,YAAY,EAAE;AACtB,QAAQ,MAAM,YAAY;AAC1B,YAAY,QAAQ,EAAE,UAAU;AAChC,YAAY,MAAM,EAAE,IAAI;AACxB,YAAY,KAAK,EAAE,IAAI;AACvB,YAAY,IAAI,EAAE,UAAU;AAC5B,YAAY,SAAS,EAAE,UAAU;AACjC,YAAY,UAAU,EAAE,QAAQ;AAChC,YAAY,cAAc,EAAE,OAAO;AACnC,YAAY,UAAU,EAAE,KAAK;AAC7B,YAAY,YAAY,EAAE,KAAA;AAC1B,UAAQ;AACR,QAAQ,UAAU,CAAC,SAAS,EAAE,GAAG,OAAO,EAAA;AACxC;AACA,QAAQ,IAAA,GAAO,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK;AACjC,YAAY,OAAO,EAAE,QAAQ,EAAE;AAC/B,cAAc,SAAS,EAAE,UAAU;AACnC,cAAc,KAAK,EAAE;AACrB,gBAAgB,SAAS,EAAE,YAAY,CAAC,QAAQ,CAAC,cAAA,CAAA,CAAA,GAAG,EAAE,gBAAA,EAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAE,CAAC;AACzD,gBAAgB,IAAI,EAAE,OAAO;AAC7B,gBAAgB,KAAK,EAAE,IAAI;AAC3B,gBAAgB,QAAQ,EAAE,MAAM,eAAe,CAAA,cAAA,CAAA,CAAC,GAAG,EAAA,gBAAA,EAAA,EAAA,IAAA,EAAA,CAAE,EAAE,CAAA,CAAA,CAAA;AACvD,iBAAgB;AAChB,eAAe;AACf,cAAc,GAAG,GAAG;AACpB,aAAY;AACZ,SAAS,EAAA;AACT,KAAI;AACJ;AACA;AACA,IAAI,MAAM,SAAA,GAAY,CAAC,CAAC,OAAQ,IAAG,OAAQ,IAAG,MAAM,IAAI,EAAG,GAAE,CAAC,iBAAiB,EAAA;AAC/E,IAAI,MAAM,YAAA,GAAe,OAAA,IAAW,MAAA,GAAS,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA,GAAA,GAAA;AACA,IAAA,MAAA,cAAA,GAAA,QAAA,IAAA,MAAA,GAAA,CAAA,KAAA,EAAA,QAAA,CAAA,CAAA,GAAA,GAAA;AACA;AACA,IAAA,IAAA,qBAAA,GAAA,CAAA,kCAAA,EAAA,cAAA,CAAA,CAAA,EAAA,SAAA,CAAA,CAAA,EAAA,YAAA,CAAA,EAAA;AACA;AACA,IAAA,MAAA,aAAA,GAAA,OAAA,IAAA,MAAA,GAAA,MAAA,GAAA,CAAA,yBAAA,EAAA;AACA,IAAA,MAAA,YAAA,GAAA,OAAA,IAAA,MAAA,GAAA,MAAA,GAAA,CAAA,yBAAA,EAAA;AACA,IAAA,MAAA,YAAA,GAAA,OAAA,IAAA,MAAA,GAAA,GAAA,GAAA,CAAA,oBAAA,EAAA,OAAA,CAAA,CAAA,CAAA,IAAA,MAAA;AACA;AACA;AACA,IAAA,SAAA,YAAA,CAAA,KAAA,EAAA,KAAA,EAAA;AACA,MAAA,MAAA,WAAA,GAAA,YAAA,CAAA,QAAA,CAAA,KAAA,EAAA;AACA,MAAA,IAAA,SAAA,GAAA,CAAA,EAAA;AACA,MAAA,IAAA,CAAA,OAAA,IAAA,OAAA,IAAA,MAAA,EAAA;AACA,QAAA,SAAA,GAAA,WAAA,GAAA,YAAA,GAAA,mBAAA;AACA,OAAA,MAAA,IAAA,OAAA,IAAA,OAAA,EAAA;AACA,QAAA,SAAA,GAAA,KAAA,GAAA,CAAA,KAAA,CAAA,GAAA,YAAA,GAAA,6BAAA;AACA,OAAA,MAAA;AACA,QAAA,SAAA,GAAA,OAAA,IAAA,QAAA;AACA,QAAA,WAAA,GAAA,CAAA,UAAA,CAAA,GAAA,CAAA,0BAAA,CAAA;AACA,QAAA,OAAA,IAAA,SAAA,GAAA,WAAA,GAAA,CAAA,WAAA,CAAA,GAAA,CAAA,4BAAA,CAAA,GAAA,GAAA;AACA,OAAA;AACA,MAAA,OAAA,SAAA;AACA,KAAA;AACA;AACA,IAAA,MAAA,OAAA,GAAA;AACA,MAAA,WAAA,EAAA,YAAA;AACA,MAAA,YAAA,EAAA,YAAA;AACA,MAAA,UAAA,EAAA,YAAA;AACA,MAAA,aAAA,EAAA,YAAA;AACA,MAAA;AACA;AACA;AACA,IAAA,MAAA,eAAA,GAAA,CAAA,MAAA,EAAA,QAAA,CAAA,KAAA,MAAA;AACA,QAAA,IAAA,QAAA,IAAA,CAAA,UAAA,GAAA,EAAA,GAAA,OAAA,CAAA;AACA,QAAA,OAAA,EAAA,QAAA,IAAA,CAAA,UAAA,IAAA,MAAA;AACA,QAAA,MAAA,EAAA,QAAA,GAAA,UAAA,GAAA,MAAA,GAAA,CAAA,GAAA,MAAA;AACA,QAAA,SAAA,EAAA,cAAA,CAAA,CAAA,MAAA,EAAA,gBAAA,EAAA,EAAA,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AACA,QAAA,UAAA,EAAA,cAAA,CAAA,CAAA,MAAA,EAAA,gBAAA,EAAA,EAAA,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA,GAAA,QAAA,GAAA,QAAA;AACA,QAAA,UAAA,EAAA,cAAA,CAAA,CAAA,MAAA,EAAA,gBAAA,EAAA,EAAA,IAAA,EAAA,CAAA,UAAA,CAAA,CAAA;AACA,QAAA,cAAA,EAAA,cAAA,CAAA,CAAA,MAAA,EAAA,gBAAA,EAAA,EAAA,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA;AACA,QAAA,aAAA,EAAA,cAAA,CAAA,CAAA,MAAA,EAAA,gBAAA,EAAA,EAAA,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AACA,OAAA,CAAA,CAAA;AACA;AACA;AACA,IAAA,MAAA,iBAAA,GAAA,cAAA,CAAA,CAAA,OAAA,EAAA,gBAAA,EAAA,EAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,CAAA,CAAA,KAAA,EAAA,MAAA,KAAA;AACA,MAAA;AACA,QAAA,MAAA,UAAA,GAAA,UAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA;AACA,QAAA,OAAA,KAAA,GAAA,UAAA,CAAA;AACA,OAAA;AAEA,KAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA;AACA;AACA,IAAA,SAAA,UAAA,CAAA,EAAA,OAAA,EAAA,UAAA,CAAA,MAAA,EAAA,CAAA;AACA,MAAA,IAAA,UAAA,KAAA,QAAA,IAAA,UAAA,KAAA,gBAAA,IAAA,UAAA,KAAA,UAAA,EAAA;AACA,QAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,OAAA,CAAA,EAAA;AACA,UAAA,OAAA,GAAA,CAAA,OAAA,CAAA,CAAA;AACA,SAAA;AACA;AACA,QAAA;AACA,UAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA;AACA,cAAA,OAAA,CAAA,GAAA,CAAA,CAAA,IAAA,EAAA,GAAA,KAAA;AACA,cAAA,IAAA,IAAA,IAAA,OAAA,IAAA,KAAA,QAAA,IAAA,IAAA,CAAA,SAAA,IAAA,IAAA,CAAA,KAAA,EAAA;AACA,gBAAA,MAAA,SAAA,GAAAA,KAAA,CAAA,IAAA,CAAA,SAAA,EAAA;AACA,gBAAA,IAAA,SAAA,EAAA;AACA,kBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA;AACA,sBAAA,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,IAAA,CAAA,KAAA,CAAA;AACA,mBAAA;AACA,kBAAA;AACA,eAAA,MAAA;AACA,gBAAA,OAAA,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA,eAAA;AACA,aAAA,CAAA;AACA,WAAA;AACA,UAAA;AACA,OAAA,MAAA;AACA;AACA,QAAA,OAAA,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AACA,OAAA;AACA,KACA;AACA,IAAA;AACA,MAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACA,MAAA,GAAA,UAAA,EAAA,GAAA,SAAA;AACA,MAAA,SAAA,EAAA,gDAAA,KAAA;AACA,UAAA,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,EAAA,SAAA,EAAA,qBAAA;AACA,SAAA,KAAA,EAAA;AACA;AACA,UAAA,cAAA,EAAA,UAAA;AACA,UAAA,aAAA,EAAA,CAAA;AACA,UAAA,MAAA,EAAA,YAAA;AACA,UAAA,YAAA;AACA,SAAA,EAAA;AACA;AACA;AACA;AACA;AACA,YAAA,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,IAAA;AACA,YAAA,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA;AACA,cAAA,cAAA,CAAA,CAAA,OAAA,EAAA,gBAAA,EAAA,GAAA,IAAA,GAAA,CAAA,GAAA,EAAA,MAAA,EAAA,GAAA,IAAA,GAAA,CAAA,CAAA,MAAA,EAAAC,OAAA,KAAA;AAIA,cAAA,MAAA,oBAAA,GAAA,UAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA;AACA,cAAA,MAAA,aAAA,GAAA,CAAA,oBAAA,GAAA,iBAAA,IAAA,GAAA,CAAA;AACA,cAAA,MAAA,UAAA,GAAA,MAAA,CAAA,UAAA,IAAA,MAAA,CAAA,IAAA,KAAA,QAAA,IAAA,MAAA,CAAA,IAAA,KAAA,gBAAA,CAAA;AACA,cAAA,MAAA,QAAA,GAAA,SAAA,CAAA,QAAA,IAAA,MAAA,CAAA,QAAA,CAAA;AACA;AACA,cAAA,QAAA,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAAA,OAAA;AACA,gBAAA,SAAA,EAAA,CAAA,EAAA,cAAA,CAAA,CAAA,MAAA,EAAA,gBAAA,EAAA,GAAA,IAAA,GAAA,CAAA,YAAA,CAAA,CAAA,GAAA,sBAAA,GAAA,YAAA,CAAA,SAAA,CAAA;AACA,gBAAA,KAAA,EAAA;AACA,gBAAA,KAAA,EAAA,CAAA,EAAA,aAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,gBAAA,eAAA,EAAA,CAAA,CAAA,OAAA,IAAA,OAAA,IAAA,MAAA,IAAA,EAAA,GAAA,OAAA,IAAA,UAAA,GAAA,iBAAA,GAAA,eAAA;AACA,gBAAA,WAAA,EAAA,CAAA,OAAA,IAAA,MAAA,IAAA,OAAA,IAAA,KAAA,IAAA,aAAA,GAAA,MAAA;AACA,gBAAA,YAAA,EAAA,UAAA,IAAA,OAAA,KAAA,MAAA,IAAA,OAAA,IAAA,MAAA,GAAA,YAAA,GAAA,MAAA;AACA;AACA,gBAAA,IAAA,UAAA,IAAAA,OAAA,IAAA,CAAA,GAAA,EAAA,mBAAA,EAAA,YAAA,EAAA,GAAA,EAAA,CAAA;AACA,gBAAA,IAAA,UAAA,IAAAA,OAAA,KAAA,OAAA,CAAA,MAAA,GAAA,CAAA,GAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,GAAA,EAAA,CAAA;AACA;AACA,gBAAA,IAAAA,OAAA,KAAA,OAAA,CAAA,MAAA,GAAA,CAAA,IAAA,EAAA,WAAA,EAAA,MAAA,CAAA,GAAA,EAAA,CAAA;AACA,iBAAA,EAAA;AACA,oBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACA,oBAAA,SAAA,EAAA,6DAAA;AACA,oBAAA,KAAA,EAAA,eAAA,CAAA,MAAA,EAAA,IAAA,CAAA,EAAA;AACA,oBAAA,MAAA,CAAA,IAAA,KAAA,UAAA;AACA,oBAAA,KAAA,CAAA,aAAA,CAAAC,QAAA,EAAA;AACA,sBAAA,IAAA,EAAA,OAAA;AACA,sBAAA,SAAA,EAAA,YAAA,CAAA,MAAA,GAAA,CAAA;AACA,sBAAA,KAAA,EAAA,IAAA;AACA,sBAAA,SAAA,EAAA,YAAA,CAAA,MAAA,IAAA,OAAA,CAAA,MAAA;AACA,sBAAA,QAAA,EAAA,mBAAA,EAAA;AACA,qBAAA;AACA,kBAAA,MAAA,CAAA,MAAA;AACA,oBAAA,QAAA;AACA,kBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAA,SAAA,EAAA,CAAA,6CAAA,CAAA;AACA,kBAAA,OAAA,EAAA,CAAA,CAAA;AACA,sBAAA,CAAA,CAAA,CAAA,eAAA,EAAA,CAAA;AACA,sBAAA,YAAA,CAAA;AACA,sBAAA,QAAA,EAAA,MAAA,CAAA,QAAA;AACA,sBAAA,SAAA,EAAA,SAAA,CAAA,SAAA,KAAA,KAAA,GAAA,MAAA,GAAA,KAAA,EAAA,EAAA,CAAA,EAAA;AACA;AACA,oBAAA,SAAA,CAAA,SAAA,IAAA,KAAA;AACA,oBAAA,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,SAAA,EAAA,sBAAA,GAAA,EAAA;AACA,oBAAA,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAA,IAAA,EAAA,YAAA,EAAA,SAAA,EAAA,sBAAA,GAAA,GAAA;AACA;AACA,mBAAA,GAAA,UAAA;AACA,kBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAA,SAAA,EAAA,CAAA,+EAAA,CAAA;AACA,kBAAA,OAAA,EAAA,CAAA,CAAA;AACA,oBAAA,CAAA,CAAA,CAAA,eAAA,EAAA,CAAA;AACA,oBAAA,YAAA,CAAA;AACA,sBAAA,QAAA,EAAA,MAAA,CAAA,QAAA;AACA,sBAAA,SAAA,EAAA,KAAA,EAAA,EAAA,CAAA,EAAA;AACA,oBAAA,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAA,IAAA,EAAA,YAAA,EAAA,SAAA,EAAA,sBAAA,GAAA,GAAA;AACA,mBAAA;AACA;AACA,mBAAA;AACA,eAAA;AACA,aAAA;AACA,aAAA,CAAA,CAAA,CAAA;AACA,WAAA;AACA,SAAA;AACA;AACA;AACA,QAAA,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,IAAA;AACA,UAAA,cAAA,CAAA,CAAA,IAAA,EAAA,gBAAA,EAAA,GAAA,IAAA,GAAA,CAAA,GAAA,EAAA,MAAA,EAAA,GAAA,IAAA,GAAA,CAAA,CAAA,IAAA,EAAA,QAAA;AACA,UAAA,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,IAAA,CAAA,EAAA;AACA;AACA,UAAA,SAAA,EAAA,CAAA,EAAA,YAAA,CAAA,QAAA,EAAA,IAAA,CAAA,EAAA,CAAA,CAAA,eAAA,CAAA,EAAA;AACA,cAAA,OAAA,CAAA,GAAA,CAAA,CAAA,MAAA,EAAA,QAAA,KAAA;AAKA;AACA,cAAA,MAAA,oBAAA,GAAA,UAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA;AACA,cAAA,MAAA,aAAA,GAAA,CAAA,oBAAA,GAAA,iBAAA,IAAA,GAAA,CAAA;AACA,cAAA,QAAA,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACA,gBAAA,GAAA,EAAA,QAAA;AACA;AACA,gBAAA,SAAA,EAAA,CAAA,EAAA,cAAA,CAAA,CAAA,MAAA,EAAA,gBAAA,EAAA,GAAA,IAAA,GAAA,CAAA,YAAA,CAAA,CAAA,GAAA,sBAAA,GAAA,YAAA,CAAA,SAAA,CAAA;AACA,gBAAA,KAAA,EAAA;AACA,kBAAA,WAAA,EAAA,CAAA,OAAA,IAAA,KAAA,IAAA,OAAA,IAAA,MAAA,IAAA,aAAA,GAAA,MAAA;AACA,kBAAA,YAAA,EAAA,CAAA,OAAA,IAAA,OAAA,IAAA,OAAA,IAAA,KAAA,IAAA,QAAA,GAAA,IAAA,CAAA,MAAA,GAAA,CAAA,GAAA,aAAA,GAAA,UAAA,IAAA,MAAA,GAAA,MAAA,GAAA,YAAA,GAAA,MAAA;AACA,kBAAA,KAAA,EAAA,CAAA,EAAA,aAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,kBAAA,YAAA,EAAA,MAAA,CAAA,UAAA,IAAA,OAAA;AACA,kBAAA,cAAA,EAAA,MAAA,CAAA,cAAA,IAAA,OAAA;AACA,kBAAA,MAAA,EAAA,MAAA;AACA,oBAAA,IAAA,QAAA,KAAA,CAAA,IAAA,QAAA,KAAA,IAAA,CAAA,MAAA,GAAA,CAAA,GAAA,EAAA,sBAAA,EAAA,UAAA,IAAA,MAAA,KAAA,YAAA,EAAA,GAAA,EAAA,CAAA;AACA,oBAAA,IAAA,QAAA,KAAA,OAAA,CAAA,MAAA,GAAA,CAAA,IAAA,QAAA,KAAA,IAAA,CAAA,MAAA,GAAA,CAAA,GAAA,EAAA,uBAAA,EAAA,UAAA,IAAA,MAAA,IAAA,YAAA,EAAA,GAAA,EAAA,CAAA;AACA,oBAAA,IAAA,QAAA,KAAA,OAAA,CAAA,MAAA,GAAA,CAAA,GAAA,EAAA,WAAA,EAAA,MAAA,EAAA,GAAA,EAAA,CAAA;AACA,iBAAA,EAAA;AACA,gBAAA,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAA,SAAA,EAAA,CAAA,yBAAA,EAAA,MAAA,CAAA,kBAAA,GAAA,mCAAA,GAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,eAAA,CAAA,MAAA,CAAA,EAAA;AACA,gBAAA,UAAA,CAAA;AACA,gBAAA,OAAA,EAAA,IAAA,CAAA,cAAA,CAAA,CAAA,MAAA,EAAA,gBAAA,EAAA,GAAA,IAAA,GAAA,CAAA,QAAA,CAAA,CAAA,CAAA;AACA,gBAAA,UAAA,EAAA,cAAA,CAAA,CAAA,MAAA,EAAA,gBAAA,EAAA,GAAA,IAAA,GAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA;AACA,eAAA;AACA,aAAA,CAAA,CAAA;AACA,aAAA;AACA,WAAA;AACA,SAAA,CAAA,CAAA,CAAA;AACA,OAAA;AACA;AACA,QAAA,UAAA,KAAA,MAAA;AACA,QAAA,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,IAAA,EAAA,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,IAAA;AACA,UAAA,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAA,OAAA,EAAA,OAAA,CAAA,MAAA,EAAA,KAAA,EAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA;AACA;AACA,UAAA,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AACA,UAAA,IAAA,EAAA,UAAA;AACA,UAAA,OAAA,EAAA,OAAA;AACA,UAAA,QAAA,EAAA,YAAA;AACA,UAAA,QAAA,EAAA,YAAA;AACA,UAAA,QAAA,EAAA,MAAA,OAAA,CAAA,GAAA,CAAA,aAAA,CAAA;AACA,UAAA,WAAA,EAAA,CAAA;AACA,UAAA,UAAA,EAAA,CAAA,EAAA;AACA,WAAA;AACA;AACA,OAAA;AACA,OAAA;AACA,OAAA;AACA;AACA;AACA,SAAA;AACA,SAAA;AACA,MAAA;AACA,CAAA;AACA;AACA;AACA,WAAA,CAAA,SAAA,GAAA;AACA,EAAA,OAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,QAAA,EAAA,UAAA,EAAA,OAAA,CAAA,CAAA;AACA,EAAA,QAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,MAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,CAAA,CAAA;AACA,EAAA,YAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;AACA,EAAA,YAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;AACA,EAAA,UAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,MAAA,EAAA,MAAA,EAAA,UAAA,CAAA,CAAA;AACA,EAAA,UAAA,EAAA,SAAA,CAAA,IAAA;AACA,EAAA,OAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,MAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CAAA,CAAA;AACA,EAAA,OAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,MAAA,EAAA,KAAA,EAAA,OAAA,EAAA,MAAA,EAAA,YAAA,CAAA,CAAA;AACA,EAAA,YAAA,EAAA,SAAA,CAAA,IAAA;AACA,EAAA,UAAA,EAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,KAAA,CAAA;AACA,IAAA,QAAA,EAAA,SAAA,CAAA,MAAA,CAAA,UAAA;AACA,IAAA,IAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,MAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,gBAAA,CAAA,CAAA;AACA,IAAA,MAAA,EAAA,SAAA,CAAA,MAAA;AACA,IAAA,KAAA,EAAA,SAAA,CAAA,MAAA,CAAA,UAAA;AACA,IAAA,SAAA,EAAA,SAAA,CAAA,MAAA;AACA,IAAA,UAAA,EAAA,SAAA,CAAA,MAAA;AACA,IAAA,cAAA,EAAA,SAAA,CAAA,MAAA;AACA,IAAA,UAAA,EAAA,SAAA,CAAA,IAAA;AACA,IAAA,YAAA,EAAA,SAAA,CAAA,IAAA;AACA,GAAA,CAAA,CAAA;AACA,EAAA,OAAA,EAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,MAAA,CAAA;AACA,CAAA;;;;"}